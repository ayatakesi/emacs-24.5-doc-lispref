# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-02-16 14:28+0900\n"
"PO-Revision-Date: 2019-02-17 07:45+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: abbrevs.texi.orig:6
#, no-wrap
msgid "Abbrevs"
msgstr "Abbrevs"

#. type: chapter
#: abbrevs.texi.orig:7
#, no-wrap
msgid "Abbrevs and Abbrev Expansion"
msgstr "Abbrevs and Abbrev Expansion"

#. type: cindex
#: abbrevs.texi.orig:8
#, no-wrap
msgid "abbrev"
msgstr "abbrev"

#. type: Plain text
#: abbrevs.texi.orig:15
msgid "An abbreviation or @dfn{abbrev} is a string of characters that may be expanded to a longer string.  The user can insert the abbrev string and find it replaced automatically with the expansion of the abbrev.  This saves typing."
msgstr "略語(abbreviation)、または@dfn{abbrev}は、より長い文字列へと展開される文字列です。ユーザーはabbrev文字列を挿入して、それを探して自動的にabbrevの展開形に置換できます。これによりタイプ量を節約できます。"

#. type: Plain text
#: abbrevs.texi.orig:20
msgid "The set of abbrevs currently in effect is recorded in an @dfn{abbrev table}.  Each buffer has a local abbrev table, but normally all buffers in the same major mode share one abbrev table.  There is also a global abbrev table.  Normally both are used."
msgstr "カレントで効果をもつabbrevsのセットは、@dfn{abbrevテーブル(abbrev table)}内に記録されます。バッファーはそれぞれローカルにabbrevテーブルをもちますが、通常は同一のメジャーモードにあるすべてのバッファーが1つのabbrevテーブルを共有します。グローバルabbrevテーブルも存在します。通常は両者が使用されます。"

#. type: Plain text
#: abbrevs.texi.orig:29
msgid "An abbrev table is represented as an obarray.  @xref{Creating Symbols}, for information about obarrays.  Each abbreviation is represented by a symbol in the obarray.  The symbol's name is the abbreviation; its value is the expansion; its function definition is the hook function for performing the expansion (@pxref{Defining Abbrevs}); and its property list cell contains various additional properties, including the use count and the number of times the abbreviation has been expanded (@pxref{Abbrev Properties})."
msgstr "abbrevテーブルはobarrayとして表されます。obarraysについての情報は、@ref{Creating Symbols}を参照してください。略語はそれぞれ、obarray内のシンボルとして表現されます。そのシンボルの名前が略語で、値が展開形になります。シンボルの関数定義は展開を行うフック関数です(@ref{Defining Abbrevs}を参照)。また、シンボルノプロパティセルには、使用回数やその略語が展開された回数を含む、さまざまな追加プロパティが含まれます(@ref{Abbrev Properties}を参照)。"

#. type: cindex
#: abbrevs.texi.orig:30
#, no-wrap
msgid "system abbrev"
msgstr "system abbrev"

#. type: Plain text
#: abbrevs.texi.orig:36
msgid "Certain abbrevs, called @dfn{system abbrevs}, are defined by a major mode instead of the user.  A system abbrev is identified by its non-@code{nil} @code{:system} property (@pxref{Abbrev Properties}).  When abbrevs are saved to an abbrev file, system abbrevs are omitted.  @xref{Abbrev Files}."
msgstr "@dfn{システムabbrev(system abbrevs)}と呼ばれる特定のabbrevは、ユーザーではなくメジャーモードにより定義されます。システムabbrevは、非@code{nil}の@code{:system}プロパティにより識別されます(@ref{Abbrev Properties}を参照)。abbrevがabbrevファイルに保存される際、システムabbrevは省略されます。@ref{Abbrev Files}を参照してください。"

#. type: Plain text
#: abbrevs.texi.orig:42
msgid "Because the symbols used for abbrevs are not interned in the usual obarray, they will never appear as the result of reading a Lisp expression; in fact, normally they are never used except by the code that handles abbrevs.  Therefore, it is safe to use them in a nonstandard way."
msgstr "abbrevに使用されるシンボルは通常のobarrayにinternされないので、Lisp式の読み取り結果として現れることは決してありません。実際に、通常はabbrevを扱うコードを除き、それらが使用されることはありません。したがって、それらを非標準的な方法で使用しても安全なのです。"

#. type: Plain text
#: abbrevs.texi.orig:47
msgid "If the minor mode Abbrev mode is enabled, the buffer-local variable @code{abbrev-mode} is non-@code{nil}, and abbrevs are automatically expanded in the buffer.  For the user-level commands for abbrevs, see @ref{Abbrevs,, Abbrev Mode, emacs, The GNU Emacs Manual}."
msgstr "マイナーモードであるAbbrevモードが有効な場合、バッファーローカル変数@code{abbrev-mode}は非@code{nil}となり、そのバッファー内で、abbrevは自動的に展開されます。abbrev用のユーザーレベルのコマンドについては、@ref{Abbrevs,, Abbrev Mode, emacs, The GNU Emacs Manual}を参照してください。"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Tables: Abbrev Tables"
msgstr "Tables: Abbrev Tables"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Creating and working with abbrev tables."
msgstr "abbrevテーブルの作成と操作。"

#. type: section
#: abbrevs.texi.orig:58 abbrevs.texi.orig:128 abbrevs.texi.orig:129
#, no-wrap
msgid "Defining Abbrevs"
msgstr "Defining Abbrevs"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Specifying abbreviations and their expansions."
msgstr "略語の指定とそれらの展開。"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Files: Abbrev Files"
msgstr "Files: Abbrev Files"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Saving abbrevs in files."
msgstr "ファイルへのabbrevの保存。"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Expansion: Abbrev Expansion"
msgstr "Expansion: Abbrev Expansion"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Controlling expansion; expansion subroutines."
msgstr "展開の制御と展開サブルーチン。"

#. type: section
#: abbrevs.texi.orig:58 abbrevs.texi.orig:374 abbrevs.texi.orig:375
#, no-wrap
msgid "Standard Abbrev Tables"
msgstr "Standard Abbrev Tables"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "Abbrev tables used by various major modes."
msgstr "種々メジャーモードに使用されるabbrevテーブル。"

#. type: section
#: abbrevs.texi.orig:58 abbrevs.texi.orig:417 abbrevs.texi.orig:418
#, no-wrap
msgid "Abbrev Properties"
msgstr "Abbrev Properties"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "How to read and set abbrev properties.  Which properties have which effect."
msgstr "abbrevプロパティの読み取りとセットを行う方法。どのプロパティが何の効果をもつか。"

#. type: section
#: abbrevs.texi.orig:58 abbrevs.texi.orig:458 abbrevs.texi.orig:459
#, no-wrap
msgid "Abbrev Table Properties"
msgstr "Abbrev Table Properties"

#. type: menuentry
#: abbrevs.texi.orig:58
msgid "How to read and set abbrev table properties.  Which properties have which effect."
msgstr "abbrevテーブルプロパティの読み取りとセットを行う方法。どのプロパティが効果をもつか。"

#. type: section
#: abbrevs.texi.orig:60 abbrevs.texi.orig:61
#, no-wrap
msgid "Abbrev Tables"
msgstr "Abbrev Tables"

#. type: cindex
#: abbrevs.texi.orig:62
#, no-wrap
msgid "abbrev tables"
msgstr "abbrev tables"

#. type: Plain text
#: abbrevs.texi.orig:65
msgid "This section describes how to create and manipulate abbrev tables."
msgstr "このセクションでは、abbrevテーブルの作成と操作を行う方法について説明します。"

#. type: defun
#: abbrevs.texi.orig:66
#, no-wrap
msgid "make-abbrev-table &optional props"
msgstr "make-abbrev-table &optional props"

#. type: defun
#: abbrevs.texi.orig:71
msgid "This function creates and returns a new, empty abbrev table---an obarray containing no symbols.  It is a vector filled with zeros.  @var{props} is a property list that is applied to the new table (@pxref{Abbrev Table Properties})."
msgstr "この関数は、空のabbrevテーブル(シンボルを含まないobarray)を作成してリターンする。これは0で充填されたベクターである。@var{props}は、新たなテーブルに適用されるプロパティリストである(@ref{Abbrev Table Properties}を参照)。"

#. type: defun
#: abbrevs.texi.orig:73
#, no-wrap
msgid "abbrev-table-p object"
msgstr "abbrev-table-p object"

#. type: defun
#: abbrevs.texi.orig:76
msgid "This function returns a non-@code{nil} value if @var{object} is an abbrev table."
msgstr "この関数は、@var{object}がabbrevテーブルなら、非@code{nil}をリターンする。"

#. type: defun
#: abbrevs.texi.orig:78
#, no-wrap
msgid "clear-abbrev-table abbrev-table"
msgstr "clear-abbrev-table abbrev-table"

#. type: defun
#: abbrevs.texi.orig:83
msgid "This function undefines all the abbrevs in @var{abbrev-table}, leaving it empty."
msgstr "この関数は、@var{abbrev-table}内のabbrevをすべて未定義とし、空のまま残す。"

#. type: defun
#: abbrevs.texi.orig:85
#, no-wrap
msgid "copy-abbrev-table abbrev-table"
msgstr "copy-abbrev-table abbrev-table"

#. type: defun
#: abbrevs.texi.orig:89
msgid "This function returns a copy of @var{abbrev-table}---a new abbrev table containing the same abbrev definitions.  It does @emph{not} copy any property lists; only the names, values, and functions."
msgstr "この関数は、@var{abbrev-table}のコピー(同じabbrev定義を含む新たなabbrevテーブル)をリターンする。これは名前、値、関数だけをコピーし、プロパティリストは何も@emph{コピーしない}。"

#. type: defun
#: abbrevs.texi.orig:91
#, no-wrap
msgid "define-abbrev-table tabname definitions &optional docstring &rest props"
msgstr "define-abbrev-table tabname definitions &optional docstring &rest props"

#.  The return value is always @code{nil}.
#. type: defun
#: abbrevs.texi.orig:98
msgid "This function defines @var{tabname} (a symbol) as an abbrev table name, i.e., as a variable whose value is an abbrev table.  It defines abbrevs in the table according to @var{definitions}, a list of elements of the form @code{(@var{abbrevname} @var{expansion} [@var{hook}] [@var{props}...])}.  These elements are passed as arguments to @code{define-abbrev}."
msgstr "この関数はabbrevテーブル名(値がabbrevテーブルであるような変数)として@var{tabname}(シンボル)を定義する。これは、そのテーブル内に@var{definitions}に応じて、abbrevを定義する。@var{definitions}は、@code{(@var{abbrevname} @var{expansion} [@var{hook}] [@var{props}...])}という形式の要素をもつリストである。これらの要素は引数として、@code{define-abbrev}に渡される。"

#. type: defun
#: abbrevs.texi.orig:102
msgid "The optional string @var{docstring} is the documentation string of the variable @var{tabname}.  The property list @var{props} is applied to the abbrev table (@pxref{Abbrev Table Properties})."
msgstr "オプション文字列@var{docstring}は、変数@var{tabname}のドキュメント文字列である。プロパティリスト@var{props}は、abbrevテーブルに適用される(@ref{Abbrev Table Properties}を参照)。"

#. type: defun
#: abbrevs.texi.orig:108
msgid "If this function is called more than once for the same @var{tabname}, subsequent calls add the definitions in @var{definitions} to @var{tabname}, rather than overwriting the entire original contents.  (A subsequent call only overrides abbrevs explicitly redefined or undefined in @var{definitions}.)"
msgstr "同一の@var{tabname}にたいしてこの関数が複数回呼び出された場合は、元のコンテンツ全体を上書きせずに、後続の呼び出しは@var{definitions}内の定義を@var{tabname}に追加する(後続の呼び出しでは、@var{definitions}内で明示的に再定義または未定義にした場合のみabbrevを上書きできる)。"

#. type: defvar
#: abbrevs.texi.orig:110
#, no-wrap
msgid "abbrev-table-name-list"
msgstr "abbrev-table-name-list"

#. type: defvar
#: abbrevs.texi.orig:113
msgid "This is a list of symbols whose values are abbrev tables.  @code{define-abbrev-table} adds the new abbrev table name to this list."
msgstr "これは、値がabbrevテーブルであるようなシンボルのリストである。@code{define-abbrev-table}は、このリストに新たなabbrevテーブル名を追加する。"

#. type: defun
#: abbrevs.texi.orig:115
#, no-wrap
msgid "insert-abbrev-table-description name &optional human"
msgstr "insert-abbrev-table-description name &optional human"

#.  The return value is always @code{nil}.
#. type: defun
#: abbrevs.texi.orig:119
msgid "This function inserts before point a description of the abbrev table named @var{name}.  The argument @var{name} is a symbol whose value is an abbrev table."
msgstr "この関数は、ポイントの前に名前が@var{name}のabbrevテーブルの説明を挿入する。引数@var{name}は、値がabbrevテーブルであるようなシンボルである。"

#. type: defun
#: abbrevs.texi.orig:126
msgid "If @var{human} is non-@code{nil}, the description is human-oriented.  System abbrevs are listed and identified as such.  Otherwise the description is a Lisp expression---a call to @code{define-abbrev-table} that would define @var{name} as it is currently defined, but without the system abbrevs.  (The mode or package using @var{name} is supposed to add these to @var{name} separately.)"
msgstr "@var{human}が非@code{nil}なら、説明は人間向けになる。システムabbrevはそのようにリストされ、識別される。それ以外なら説明はLisp式(カレントで定義されているように@var{name}を定義するが、システムabbrevとしては定義しないような@code{define-abbrev-table}呼び出し)となる(@var{name}を使用するモードまたはパッケージは、それらを個別に@var{name}に追加すると想定されている)。"

#. type: cindex
#: abbrevs.texi.orig:130
#, no-wrap
msgid "defining abbrevs"
msgstr "defining abbrevs"

#. type: Plain text
#: abbrevs.texi.orig:134
msgid "@code{define-abbrev} is the low-level basic function for defining an abbrev in an abbrev table."
msgstr "@code{define-abbrev}は、abbrevテーブル内にabbrevを定義するための基本的な低レベル関数です。"

#. type: Plain text
#: abbrevs.texi.orig:141
msgid "When a major mode defines a system abbrev, it should call @code{define-abbrev} and specify @code{t} for the @code{:system} property.  Be aware that any saved non-``system'' abbrevs are restored at startup, i.e., before some major modes are loaded.  Therefore, major modes should not assume that their abbrev tables are empty when they are first loaded."
msgstr "メジャーモードがシステムabbrevを定義する際は、@code{:system}プロパティに@code{t}を指定して@code{define-abbrev}を呼び出すべきです。すべての保存された非``システム''abbrevは起動時(何らかのメジャーモードがロードされる前)にリストアされることに注意してください。したがってメジャーモードは、最初にそのモードがロードされた際、それらのモードのabbrevテーブルが空であると仮定するべきではありません。"

#. type: defun
#: abbrevs.texi.orig:142
#, no-wrap
msgid "define-abbrev abbrev-table name expansion &optional hook &rest props"
msgstr "define-abbrev abbrev-table name expansion &optional hook &rest props"

#. type: defun
#: abbrevs.texi.orig:150
msgid "This function defines an abbrev named @var{name}, in @var{abbrev-table}, to expand to @var{expansion} and call @var{hook}, with properties @var{props} (@pxref{Abbrev Properties}).  The return value is @var{name}.  The @code{:system} property in @var{props} is treated specially here: if it has the value @code{force}, then it will overwrite an existing definition even for a non-``system'' abbrev of the same name."
msgstr "この関数は、@var{abbrev-table}内に@var{name}という名前で、@var{expansion}に展開され、@var{hook}を呼び出すabbrevを、プロパティ@var{props}(@ref{Abbrev Properties}を参照)とともに定義する。リターン値は@var{name}。ここでは、@var{props}内の@code{:system}プロパティは特別に扱われる。このプロパティが値@code{force}をもつなら、たとえ同じ名前の非``システム''abbrevでも、既存の定義を上書きするだろう。"

#. type: defun
#: abbrevs.texi.orig:155
msgid "@var{name} should be a string.  The argument @var{expansion} is normally the desired expansion (a string), or @code{nil} to undefine the abbrev.  If it is anything but a string or @code{nil}, then the abbreviation ``expands'' solely by running @var{hook}."
msgstr "@var{name}は文字列であること。引数@var{expansion}は通常は望む展開形(文字列)であり、@code{nil}ならそのabbrevを未定義とする。これが文字列または@code{nil}以外の何かなら、そのabbrevは@var{hook}を実行することにより、単に``展開''される。"

#. type: defun
#: abbrevs.texi.orig:160
msgid "The argument @var{hook} is a function or @code{nil}.  If @var{hook} is non-@code{nil}, then it is called with no arguments after the abbrev is replaced with @var{expansion}; point is located at the end of @var{expansion} when @var{hook} is called."
msgstr "引数@var{hook}は、関数または@code{nil}であること。@var{hook}が非@code{nil}なら、abbrevが@var{expansion}に置換された後に、引数なしでそれが呼び出される。@var{hook}呼び出し時、ポイントは@var{expansion}の終端に置かれる。"

#. type: cindex
#: abbrevs.texi.orig:161
#, no-wrap
msgid "@code{no-self-insert} property"
msgstr "@code{no-self-insert} property"

#. type: defun
#: abbrevs.texi.orig:169
msgid "If @var{hook} is a non-@code{nil} symbol whose @code{no-self-insert} property is non-@code{nil}, @var{hook} can explicitly control whether to insert the self-inserting input character that triggered the expansion.  If @var{hook} returns non-@code{nil} in this case, that inhibits insertion of the character.  By contrast, if @var{hook} returns @code{nil}, @code{expand-abbrev} (or @code{abbrev-insert})  also returns @code{nil}, as if expansion had not really occurred."
msgstr "@var{hook}が、@code{no-self-insert}プロパティが非@code{nil}であるような、非@code{nil}のシンボルなら、@var{hook}は展開をトリガーするような自己挿入入力文字を挿入できるかどうかを、明示的に制御できる。この場合、@var{hook}が非@code{nil}をリターンしたら、その文字の挿入を抑止する。対照的に、@var{hook}が@code{nil}をリターンした場合は、あたかも実際には展開が行われなかったかのように、@code{expand-abbrev}(または@code{abbrev-insert})も@code{nil}をリターンする。"

#. type: defun
#: abbrevs.texi.orig:174
msgid "Normally, @code{define-abbrev} sets the variable @code{abbrevs-changed} to @code{t}, if it actually changes the abbrev.  This is so that some commands will offer to save the abbrevs.  It does not do this for a system abbrev, since those aren't saved anyway."
msgstr "通常@code{define-abbrev}は、実際にabbrevを変更した場合は、変数@code{abbrevs-changed}に@code{t}をセットする。これはいくつかのコマンドが、abbrevの保存を提案するためである。システムabbrevは、いずれにせよ保存されないので、システムabbrevにたいして、これは行われない。"

#. type: defopt
#: abbrevs.texi.orig:176
#, no-wrap
msgid "only-global-abbrevs"
msgstr "only-global-abbrevs"

#. type: defopt
#: abbrevs.texi.orig:182
msgid "If this variable is non-@code{nil}, it means that the user plans to use global abbrevs only.  This tells the commands that define mode-specific abbrevs to define global ones instead.  This variable does not alter the behavior of the functions in this section; it is examined by their callers."
msgstr "この変数が非@code{nil}なら、それはユーザーがグローバルabbrevのみの使用を計画していることを意味する。これはモード固有のabbrevを定義するコマンドにたいして、かわりにグローバルabbrevを定義するよう指示する。この変数は、このセクション内の関数の振る舞いを変更しない。それは呼び出し側により検証される。"

#. type: node
#: abbrevs.texi.orig:184
#, no-wrap
msgid "Abbrev Files"
msgstr "Abbrev Files"

#. type: section
#: abbrevs.texi.orig:185
#, no-wrap
msgid "Saving Abbrevs in Files"
msgstr "Saving Abbrevs in Files"

#. type: cindex
#: abbrevs.texi.orig:186
#, no-wrap
msgid "save abbrevs in files"
msgstr "save abbrevs in files"

#. type: Plain text
#: abbrevs.texi.orig:195
msgid "A file of saved abbrev definitions is actually a file of Lisp code.  The abbrevs are saved in the form of a Lisp program to define the same abbrev tables with the same contents.  Therefore, you can load the file with @code{load} (@pxref{How Programs Do Loading}).  However, the function @code{quietly-read-abbrev-file} is provided as a more convenient interface.  Emacs automatically calls this function at startup."
msgstr "abbrev定義が保存されたファイルは、実際にはLispコードのファイルです。abbrevは、同じコンテンツの同じabbrevテーブルを定義する、Lispプログラムの形式で保存されます。したがってそのファイルは、@code{load}でロードすることができます(@ref{How Programs Do Loading}を参照)。しかし、より簡便なインターフェースとして、関数@code{quietly-read-abbrev-file}が提供されています。起動時に、Emacsは自動的にこの関数を呼び出します。"

#. type: Plain text
#: abbrevs.texi.orig:199
msgid "User-level facilities such as @code{save-some-buffers} can save abbrevs in a file automatically, under the control of variables described here."
msgstr "@code{save-some-buffers}のようなユーザーレベルの機能は、ここで説明する変数の制御下で、自動的にabbrevをファイルに保存できます。"

#. type: defopt
#: abbrevs.texi.orig:200
#, no-wrap
msgid "abbrev-file-name"
msgstr "abbrev-file-name"

#. type: defopt
#: abbrevs.texi.orig:202
msgid "This is the default file name for reading and saving abbrevs."
msgstr "これは、abbrevの読み込みと保存のための、デフォルトのファイル名である。"

#. type: defun
#: abbrevs.texi.orig:204
#, no-wrap
msgid "quietly-read-abbrev-file &optional filename"
msgstr "quietly-read-abbrev-file &optional filename"

#. type: defun
#: abbrevs.texi.orig:209
msgid "This function reads abbrev definitions from a file named @var{filename}, previously written with @code{write-abbrev-file}.  If @var{filename} is omitted or @code{nil}, the file specified in @code{abbrev-file-name} is used."
msgstr "この関数は、以前に@code{write-abbrev-file}で書き込まれた、@var{filename}という名前のファイルから、abbrevの定義を読み込む。@var{filename}が省略または@code{nil}なら、@code{abbrev-file-name}内で指定されているファイルが使用される。"

#. type: defun
#: abbrevs.texi.orig:212
msgid "As the name implies, this function does not display any messages."
msgstr "その名前が暗示するように、この関数は何のメッセージも表示しない。"

#. type: defopt
#: abbrevs.texi.orig:214
#, no-wrap
msgid "save-abbrevs"
msgstr "save-abbrevs"

#. type: defopt
#: abbrevs.texi.orig:220
msgid "A non-@code{nil} value for @code{save-abbrevs} means that Emacs should offer to save abbrevs (if any have changed) when files are saved.  If the value is @code{silently}, Emacs saves the abbrevs without asking the user.  @code{abbrev-file-name} specifies the file to save the abbrevs in."
msgstr "@code{save-abbrevs}にたいする非@code{nil}値は、ファイル保存時に、(もし何か変更されていれば)Emacsがabbrevの保存を提案するべきであることを意味する。値が@code{silently}なら、Emacsはユーザーに尋ねることなく、abbrevを保存する。@code{abbrev-file-name}は、abbrevを保存するファイルを指定する。"

#. type: defvar
#: abbrevs.texi.orig:222
#, no-wrap
msgid "abbrevs-changed"
msgstr "abbrevs-changed"

#. type: defvar
#: abbrevs.texi.orig:226
msgid "This variable is set non-@code{nil} by defining or altering any abbrevs (except system abbrevs).  This serves as a flag for various Emacs commands to offer to save your abbrevs."
msgstr "この変数は、abbrev(システムabbrevを除く)の定義または変更によりセットされる。これは、さまざまなEmacsコマンドにとって、ユーザーにabbrevの保存を提案するための、フラグとしての役目をもつ。"

#. type: deffn
#: abbrevs.texi.orig:228
#, no-wrap
msgid "Command write-abbrev-file &optional filename"
msgstr "Command write-abbrev-file &optional filename"

#. type: deffn
#: abbrevs.texi.orig:234
msgid "Save all abbrev definitions (except system abbrevs), for all abbrev tables listed in @code{abbrev-table-name-list}, in the file @var{filename}, in the form of a Lisp program that when loaded will define the same abbrevs.  If @var{filename} is @code{nil} or omitted, @code{abbrev-file-name} is used.  This function returns @code{nil}."
msgstr "@code{abbrev-table-name-list}内にリストされたすべてのabbrevテーブルにたいして、すべてのabbrev定義(システムabbrevを除く)を、ロード時に同じabbrevを定義するであろうLispプログラム形式で、ファイル@var{filename}内に保存する。@var{filename}が@code{nil}なら、@code{abbrev-file-name}が仕様される。この関数は@code{nil}をリターンする。"

#. type: node
#: abbrevs.texi.orig:236
#, no-wrap
msgid "Abbrev Expansion"
msgstr "Abbrev Expansion"

#. type: section
#: abbrevs.texi.orig:237
#, no-wrap
msgid "Looking Up and Expanding Abbreviations"
msgstr "Looking Up and Expanding Abbreviations"

#. type: cindex
#: abbrevs.texi.orig:238
#, no-wrap
msgid "looking up abbrevs"
msgstr "looking up abbrevs"

#. type: cindex
#: abbrevs.texi.orig:239
#, no-wrap
msgid "expanding abbrevs"
msgstr "expanding abbrevs"

#. type: cindex
#: abbrevs.texi.orig:240
#, no-wrap
msgid "abbrevs, looking up and expanding"
msgstr "abbrevs, looking up and expanding"

#. type: Plain text
#: abbrevs.texi.orig:246
msgid "Abbrevs are usually expanded by certain interactive commands, including @code{self-insert-command}.  This section describes the subroutines used in writing such commands, as well as the variables they use for communication."
msgstr "abbrevは通常、@code{self-insert-command}を含む、特定のinteractiveなコマンドにより展開されます。このセクションでは、そのようなコマンドの記述に使用されるサブルーチン、並びに通信のために使用される変数について説明します。"

#. type: defun
#: abbrevs.texi.orig:247
#, no-wrap
msgid "abbrev-symbol abbrev &optional table"
msgstr "abbrev-symbol abbrev &optional table"

#. type: defun
#: abbrevs.texi.orig:254
msgid "This function returns the symbol representing the abbrev named @var{abbrev}.  It returns @code{nil} if that abbrev is not defined.  The optional second argument @var{table} is the abbrev table in which to look it up.  If @var{table} is @code{nil}, this function tries first the current buffer's local abbrev table, and second the global abbrev table."
msgstr "この関数は、@var{abbrev}という名前のabbrevを表すシンボルをリターンする。そのabbrevが定義されていなければ、@code{nil}をリターンする。オプションの2つ目の引数@var{table}は、それを照合するためのabbrevテーブルである。@var{table}が@code{nil}なら、この関数はまずカレントバッファーのローカルabbrevテーブル、次にグローバルabbrevテーブルを試みる。"

#. type: defun
#: abbrevs.texi.orig:256
#, no-wrap
msgid "abbrev-expansion abbrev &optional table"
msgstr "abbrev-expansion abbrev &optional table"

#. type: defun
#: abbrevs.texi.orig:262
msgid "This function returns the string that @var{abbrev} would expand into (as defined by the abbrev tables used for the current buffer).  It returns @code{nil} if @var{abbrev} is not a valid abbrev.  The optional argument @var{table} specifies the abbrev table to use, as in @code{abbrev-symbol}."
msgstr "この関数は、@var{abbrev}が展開されるであろう文字列(カレントバッファーにたいして使用されるabbrevテーブルで定義される文字列)をリターンする。これは@var{abbrev}が有効なabbrevでなければ、@code{nil}をリターンする。オプション引数@var{table}は@code{abbrev-symbol}の場合と同様、使用するabbrevテーブルを指定する。"

#. type: deffn
#: abbrevs.texi.orig:264
#, no-wrap
msgid "Command expand-abbrev"
msgstr "Command expand-abbrev"

#. type: deffn
#: abbrevs.texi.orig:269
msgid "This command expands the abbrev before point, if any.  If point does not follow an abbrev, this command does nothing.  To do the expansion, it calls the function that is the value of the @code{abbrev-expand-function} variable, with no arguments, and returns whatever that function does."
msgstr "このコマンドは、(もしあれば)ポイントの前のabbrevを展開する。ポイントがabbrevの後になければ、このコマンドは何もしない。展開を行うために、これは変数@code{abbrev-expand-function}の値となっている関数を引数なしで呼び出し、何であれその関数がリターンしたものをリターンする。"

#. type: deffn
#: abbrevs.texi.orig:276
msgid "The default expansion function returns the abbrev symbol if it did expansion, and @code{nil} otherwise.  If the abbrev symbol has a hook function that is a symbol whose @code{no-self-insert} property is non-@code{nil}, and if the hook function returns @code{nil} as its value, then the default expansion function returns @code{nil}, even though expansion did occur."
msgstr "デフォルトの展開関数は、展開を行ったらabbrevのシンボル、それ以外は@code{nil}をリターンする。そのabbrevシンボルが、@code{no-self-insert}プロパティが非@code{nil}のシンボルであるようなフック関数をもち、そのフック関数が値として@code{nil}をリターンした場合は、たとえ展開が行われたとしても、デフォルト展開関数は@code{nil}をリターンする。"

#. type: defun
#: abbrevs.texi.orig:278
#, no-wrap
msgid "abbrev-insert abbrev &optional name start end"
msgstr "abbrev-insert abbrev &optional name start end"

#. type: defun
#: abbrevs.texi.orig:286
msgid "This function inserts the abbrev expansion of @code{abbrev}, replacing the text between @code{start} and @code{end}.  If @code{start} is omitted, it defaults to point.  @code{name}, if non-@code{nil}, should be the name by which this abbrev was found (a string); it is used to figure out whether to adjust the capitalization of the expansion.  The function returns @code{abbrev} if the abbrev was successfully inserted."
msgstr "この関数は、@code{start}と@code{end}の間のテキストを置換することにより、@code{abbrev}のabbrev展開形を挿入する。@code{start}が省略された場合のデフォルトは、ポイントである。@code{name}が非@code{nil}なら、それはこのabbrevが見つかった名前(文字列)であること。これは展開形のcapitalizationを調整するかどうかを判断するために使用される。この関数は、abbrevの挿入に成功したら@code{abbrev}をリターンする。"

#. type: deffn
#: abbrevs.texi.orig:288
#, no-wrap
msgid "Command abbrev-prefix-mark &optional arg"
msgstr "Command abbrev-prefix-mark &optional arg"

#. type: deffn
#: abbrevs.texi.orig:293
msgid "This command marks the current location of point as the beginning of an abbrev.  The next call to @code{expand-abbrev} will use the text from here to point (where it is then) as the abbrev to expand, rather than using the previous word as usual."
msgstr "このコマンドは、ポイントのカレント位置を、abbrevの開始としてマークする。@code{expand-abbrev}の次回呼び出しでは、通常のように以前の単語ではなく、ここからポイント(その時点での位置)にあるテキストが展開するべきabbrevとして使用される。"

#. type: deffn
#: abbrevs.texi.orig:298
msgid "First, this command expands any abbrev before point, unless @var{arg} is non-@code{nil}.  (Interactively, @var{arg} is the prefix argument.)  Then it inserts a hyphen before point, to indicate the start of the next abbrev to be expanded.  The actual expansion removes the hyphen."
msgstr "このコマンドはまず、@var{arg}が@code{nil}なら、ポイントの前の任意のabbrevを展開する(インタラクティブな呼び出しでは、@var{arg}はプレフィクス引数である)。それから、展開する次のabbrevの開始を示すために、ポイントの前にハイフンを挿入する。実際の展開では、ハイフンは削除される。"

#. type: defopt
#: abbrevs.texi.orig:300
#, no-wrap
msgid "abbrev-all-caps"
msgstr "abbrev-all-caps"

#. type: defopt
#: abbrevs.texi.orig:305
msgid "When this is set non-@code{nil}, an abbrev entered entirely in upper case is expanded using all upper case.  Otherwise, an abbrev entered entirely in upper case is expanded by capitalizing each word of the expansion."
msgstr "これが非@code{nil}にセットされているときは、すべて大文字で入力されたabbrevは、すべて大文字を使用して展開される。それ以外なら、すべて大文字で入力されたabbrevは、展開形の単語ごとにcapitalizeして展開される。"

#. type: defvar
#: abbrevs.texi.orig:307
#, no-wrap
msgid "abbrev-start-location"
msgstr "abbrev-start-location"

#. type: defvar
#: abbrevs.texi.orig:314
msgid "The value of this variable is a buffer position (an integer or a marker)  for @code{expand-abbrev} to use as the start of the next abbrev to be expanded.  The value can also be @code{nil}, which means to use the word before point instead.  @code{abbrev-start-location} is set to @code{nil} each time @code{expand-abbrev} is called.  This variable is also set by @code{abbrev-prefix-mark}."
msgstr "この変数の値は、次にabbrevを展開する開始位置として@code{expand-abbrev}に使用される、バッファー位置である。値は@code{nil}も可能で、かわりにポイントの前の単語を使用することを意味する。@code{abbrev-start-location}は、@code{expand-abbrev}の呼び出しごとに、毎回@code{nil}にセットされる。この変数は、@code{abbrev-prefix-mark}によってもセットされる。"

#. type: defvar
#: abbrevs.texi.orig:316
#, no-wrap
msgid "abbrev-start-location-buffer"
msgstr "abbrev-start-location-buffer"

#. type: defvar
#: abbrevs.texi.orig:321
msgid "The value of this variable is the buffer for which @code{abbrev-start-location} has been set.  Trying to expand an abbrev in any other buffer clears @code{abbrev-start-location}.  This variable is set by @code{abbrev-prefix-mark}."
msgstr "この変数の値は、@code{abbrev-start-location}がセットされたバッファーである。他のバッファーでabbrev展開を試みることにより、@code{abbrev-start-location}はクリアーされる。この変数は、@code{abbrev-prefix-mark}によりセットされる。"

#. type: defvar
#: abbrevs.texi.orig:323
#, no-wrap
msgid "last-abbrev"
msgstr "last-abbrev"

#. type: defvar
#: abbrevs.texi.orig:328
msgid "This is the @code{abbrev-symbol} of the most recent abbrev expanded.  This information is left by @code{expand-abbrev} for the sake of the @code{unexpand-abbrev} command (@pxref{Expanding Abbrevs,, Expanding Abbrevs, emacs, The GNU Emacs Manual})."
msgstr "これは、直近のabbrev展開の@code{abbrev-symbol}である。これは、@code{unexpand-abbrev}コマンド(@ref{Expanding Abbrevs,, Expanding Abbrevs, emacs, The GNU Emacs Manual}を参照)のために、@code{expand-abbrev}により残された情報である。"

#. type: defvar
#: abbrevs.texi.orig:330
#, no-wrap
msgid "last-abbrev-location"
msgstr "last-abbrev-location"

#. type: defvar
#: abbrevs.texi.orig:334
msgid "This is the location of the most recent abbrev expanded.  This contains information left by @code{expand-abbrev} for the sake of the @code{unexpand-abbrev} command."
msgstr "これは、直近の.abbrev展開の場所である。これには、@code{unexpand-abbrev}コマンドのために@code{expand-abbrev}により残された情報が含まれる。"

#. type: defvar
#: abbrevs.texi.orig:336
#, no-wrap
msgid "last-abbrev-text"
msgstr "last-abbrev-text"

#. type: defvar
#: abbrevs.texi.orig:341
msgid "This is the exact expansion text of the most recent abbrev expanded, after case conversion (if any).  Its value is @code{nil} if the abbrev has already been unexpanded.  This contains information left by @code{expand-abbrev} for the sake of the @code{unexpand-abbrev} command."
msgstr "これは直近のabbrev展開の正確な展開形を、(もしあれば)大文字小文字変換した後のテキストである。そのabbrevがすでに非展開されていれば、値は@code{nil}になる。これには@code{unexpand-abbrev}コマンドのために、@code{expand-abbrev}により残された情報が含まれる。"

#. type: defvar
#: abbrevs.texi.orig:343
#, no-wrap
msgid "abbrev-expand-function"
msgstr "abbrev-expand-function"

#. type: defvar
#: abbrevs.texi.orig:348
msgid "The value of this variable is a function that @code{expand-abbrev} will call with no arguments to do the expansion.  The function can do anything it wants before and after performing the expansion.  It should return the abbrev symbol if expansion took place."
msgstr "この変数の値は、展開を行うために@code{expand-abbrev}が引数なしで呼び出すであろう関数である。この関数では、展開を行う前後に行いたいことを行うことができる。展開が行われた場合は、そのabbrevシンボルをリターンすること。"

#. type: Plain text
#: abbrevs.texi.orig:358
msgid "The following sample code shows a simple use of @code{abbrev-expand-function}.  It assumes that @code{foo-mode} is a mode for editing certain files in which lines that start with @samp{#} are comments.  You want to use Text mode abbrevs for those lines.  The regular local abbrev table, @code{foo-mode-abbrev-table} is appropriate for all other lines.  @xref{Standard Abbrev Tables}, for the definitions of @code{local-abbrev-table} and @code{text-mode-abbrev-table}.  @xref{Advising Functions}, for details of @code{add-function}."
msgstr "以下のサンプルコードで、@code{abbrev-expand-function}のシンプルな使い方を示します。このサンプルでは、@code{foo-mode}が@samp{#}で始まる行がコメントであるような、特定のファイルを編集するためのモードであるとします。それらコメント行にたいしては、Textモードのabbrevの使用が望ましく、その他すべての行にたいしては、正規のローカルabbrevテーブル@code{foo-mode-abbrev-table}が適しています。@code{local-abbrev-table}と@code{text-mode-abbrev-table}の定義については、@ref{Standard Abbrev Tables}を参照してください。@code{add-function}についての詳細は、@ref{Advising Functions}を参照してください。"

#. type: smallexample
#: abbrevs.texi.orig:367
#, no-wrap
msgid ""
"(defun foo-mode-abbrev-expand-function (expand)\n"
"  (if (not (save-excursion (forward-line 0) (eq (char-after) ?#)))\n"
"      ;; Performs normal expansion.\n"
"      (funcall expand)\n"
"    ;; We're inside a comment: use the text-mode abbrevs.\n"
"    (let ((local-abbrev-table text-mode-abbrev-table))\n"
"      (funcall expand))))\n"
"\n"
msgstr ""
"(defun foo-mode-abbrev-expand-function (expand)\n"
"  (if (not (save-excursion (forward-line 0) (eq (char-after) ?#)))\n"
"      ;; 通常の展開を行う\n"
"      (funcall expand)\n"
"    ;; コメント内はtext-modeのabbrevを使用\n"
"    (let ((local-abbrev-table text-mode-abbrev-table))\n"
"      (funcall expand))))\n"
"\n"

#. type: smallexample
#: abbrevs.texi.orig:372
#, no-wrap
msgid ""
"(add-hook 'foo-mode-hook\n"
"          #'(lambda ()\n"
"              (add-function :around (local 'abbrev-expand-function)\n"
"                            #'foo-mode-abbrev-expand-function)))\n"
msgstr ""
"(add-hook 'foo-mode-hook\n"
"          #'(lambda ()\n"
"              (add-function :around (local 'abbrev-expand-function)\n"
"                            #'foo-mode-abbrev-expand-function)))\n"

#. type: cindex
#: abbrevs.texi.orig:376
#, no-wrap
msgid "standard abbrev tables"
msgstr ""

#. type: Plain text
#: abbrevs.texi.orig:380
msgid "Here we list the variables that hold the abbrev tables for the preloaded major modes of Emacs."
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:381
#, no-wrap
msgid "global-abbrev-table"
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:386
msgid "This is the abbrev table for mode-independent abbrevs.  The abbrevs defined in it apply to all buffers.  Each buffer may also have a local abbrev table, whose abbrev definitions take precedence over those in the global table."
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:388
#, no-wrap
msgid "local-abbrev-table"
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:392
msgid "The value of this buffer-local variable is the (mode-specific)  abbreviation table of the current buffer.  It can also be a list of such tables."
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:394
#, no-wrap
msgid "abbrev-minor-mode-table-alist"
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:400
msgid "The value of this variable is a list of elements of the form @code{(@var{mode} . @var{abbrev-table})} where @var{mode} is the name of a variable: if the variable is bound to a non-@code{nil} value, then the @var{abbrev-table} is active, otherwise it is ignored.  @var{abbrev-table} can also be a list of abbrev tables."
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:402
#, no-wrap
msgid "fundamental-mode-abbrev-table"
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:405
msgid "This is the local abbrev table used in Fundamental mode; in other words, it is the local abbrev table in all buffers in Fundamental mode."
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:407
#, no-wrap
msgid "text-mode-abbrev-table"
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:409
msgid "This is the local abbrev table used in Text mode."
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:411
#, no-wrap
msgid "lisp-mode-abbrev-table"
msgstr ""

#. type: defvar
#: abbrevs.texi.orig:415
msgid "This is the local abbrev table used in Lisp mode.  It is the parent of the local abbrev table used in Emacs Lisp mode.  @xref{Abbrev Table Properties}."
msgstr ""

#. type: cindex
#: abbrevs.texi.orig:419
#, no-wrap
msgid "abbrev properties"
msgstr ""

#. type: Plain text
#: abbrevs.texi.orig:424
msgid "Abbrevs have properties, some of which influence the way they work.  You can provide them as arguments to @code{define-abbrev}, and manipulate them with the following functions:"
msgstr ""

#. type: defun
#: abbrevs.texi.orig:425
#, no-wrap
msgid "abbrev-put abbrev prop val"
msgstr ""

#. type: defun
#: abbrevs.texi.orig:427
msgid "Set the property @var{prop} of @var{abbrev} to value @var{val}."
msgstr ""

#. type: defun
#: abbrevs.texi.orig:429
#, no-wrap
msgid "abbrev-get abbrev prop"
msgstr ""

#. type: defun
#: abbrevs.texi.orig:432
msgid "Return the property @var{prop} of @var{abbrev}, or @code{nil} if the abbrev has no such property."
msgstr ""

#. type: Plain text
#: abbrevs.texi.orig:435
msgid "The following properties have special meanings:"
msgstr ""

#. type: item
#: abbrevs.texi.orig:437
#, no-wrap
msgid ":count"
msgstr ""

#. type: table
#: abbrevs.texi.orig:441
msgid "This property counts the number of times the abbrev has been expanded.  If not explicitly set, it is initialized to 0 by @code{define-abbrev}."
msgstr ""

#. type: item
#: abbrevs.texi.orig:442
#, no-wrap
msgid ":system"
msgstr ""

#. type: table
#: abbrevs.texi.orig:445
msgid "If non-@code{nil}, this property marks the abbrev as a system abbrev.  Such abbrevs are not saved (@pxref{Abbrev Files})."
msgstr ""

#. type: item
#: abbrevs.texi.orig:446 abbrevs.texi.orig:478
#, no-wrap
msgid ":enable-function"
msgstr ""

#. type: table
#: abbrevs.texi.orig:450
msgid "If non-@code{nil}, this property should be a function of no arguments which returns @code{nil} if the abbrev should not be used and @code{t} otherwise."
msgstr ""

#. type: item
#: abbrevs.texi.orig:451 abbrevs.texi.orig:484
#, no-wrap
msgid ":case-fixed"
msgstr ""

#. type: table
#: abbrevs.texi.orig:456
msgid "If non-@code{nil}, this property indicates that the case of the abbrev's name is significant and should only match a text with the same pattern of capitalization.  It also disables the code that modifies the capitalization of the expansion."
msgstr ""

#. type: cindex
#: abbrevs.texi.orig:460
#, no-wrap
msgid "abbrev table properties"
msgstr ""

#. type: Plain text
#: abbrevs.texi.orig:465
msgid "Like abbrevs, abbrev tables have properties, some of which influence the way they work.  You can provide them as arguments to @code{define-abbrev-table}, and manipulate them with the functions:"
msgstr ""

#. type: defun
#: abbrevs.texi.orig:466
#, no-wrap
msgid "abbrev-table-put table prop val"
msgstr ""

#. type: defun
#: abbrevs.texi.orig:468
msgid "Set the property @var{prop} of abbrev table @var{table} to value @var{val}."
msgstr ""

#. type: defun
#: abbrevs.texi.orig:470
#, no-wrap
msgid "abbrev-table-get table prop"
msgstr ""

#. type: defun
#: abbrevs.texi.orig:473
msgid "Return the property @var{prop} of abbrev table @var{table}, or @code{nil} if the abbrev has no such property."
msgstr ""

#. type: Plain text
#: abbrevs.texi.orig:476
msgid "The following properties have special meaning:"
msgstr ""

#. type: table
#: abbrevs.texi.orig:483
msgid "This is like the @code{:enable-function} abbrev property except that it applies to all abbrevs in the table.  It is used before even trying to find the abbrev before point, so it can dynamically modify the abbrev table."
msgstr ""

#. type: table
#: abbrevs.texi.orig:487
msgid "This is like the @code{:case-fixed} abbrev property except that it applies to all abbrevs in the table."
msgstr ""

#. type: item
#: abbrevs.texi.orig:488
#, no-wrap
msgid ":regexp"
msgstr ""

#. type: table
#: abbrevs.texi.orig:497
msgid "If non-@code{nil}, this property is a regular expression that indicates how to extract the name of the abbrev before point, before looking it up in the table.  When the regular expression matches before point, the abbrev name is expected to be in submatch 1.  If this property is @code{nil}, the default is to use @code{backward-word} and @code{forward-word} to find the name.  This property allows the use of abbrevs whose name contains characters of non-word syntax."
msgstr ""

#. type: item
#: abbrevs.texi.orig:498
#, no-wrap
msgid ":parents"
msgstr ""

#. type: table
#: abbrevs.texi.orig:501
msgid "This property holds a list of tables from which to inherit other abbrevs."
msgstr ""

#. type: item
#: abbrevs.texi.orig:502
#, no-wrap
msgid ":abbrev-table-modiff"
msgstr ""

#. type: table
#: abbrevs.texi.orig:505
msgid "This property holds a counter incremented each time a new abbrev is added to the table."
msgstr ""
