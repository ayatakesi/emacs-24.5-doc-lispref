@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c -*-texinfo-*-
@c This is part of the GNU Emacs Lisp Reference Manual.
@c Copyright (C) 1999, 2002-2015 Free Software Foundation, Inc.
@c See the file elisp.texi for copying conditions.

@c This node must have no pointers.

@node Antinews
@appendix Emacs 23 Antinews
@c Update the elisp.texi Antinews menu entry with the above version number.

時代に逆らって生きるユーザーのために、以下はEmacsバージョン23.4へのダウングレードに関する情報です。Emacs
@value{EMACSVER}機能の不在による結果としての偉大なる単純さを、ぜひ堪能してください。

@section Old Lisp Features in Emacs 23

@itemize @bullet
@item
レキシカルスコープのサポートは削除されました。すべての変数はダイナミックなスコープをもちます。@code{lexical-binding}変数と、@code{eval}の@var{lexical}引数は削除されました。フォーム@code{defvar}と@code{defconst}は、すべての変数がダイナミックになったので、もはや変数をダイナミックとマークすることはありません。

ダイナミックバインディングだけをもつことが、Emacs拡張の精神に適合しています。任意のEmacsコードによる定義済み変数へのアクセスを許容する方が、混乱を最小にするのです。とはいえ、あなたのプログラムが理解しにくくなるのを避けるためのヒントは、@ref{Dynamic
Binding Tips}を参照してください。

@item
Lispから引数を@code{nil}省略してマイナーモード関数を呼び出しても、マイナーモードは無条件でに有効になりません。かわりにマイナーモードのオンとオフが切り替わります。これはインタラクティブな呼び出し時の挙動なので、行うのは簡単です。これの1つの欠点は、フックからマイナーモードを有効にするのが、より面倒になることです。これを行うためには、以下のようなことをする必要があります

@example
(add-hook 'foo-hook (lambda () (bar-mode 1)))
@end example

@noindent
または、@code{turn-on-bar-mode}を定義して、それをフックから呼び出してください。

@item
ダミーのメジャーモード@code{prog-mode}は、削除されました。プログラミング関連のモードの慣習に適合させるためにこれを使うかわりに、あなたのモードがこれらの慣習にしたがうよう、明示的に保証するべきです。@ref{Major
Mode Conventions}を参照してください。

@item
Emacsの双方向表示と、編集にたいするサポートはなくなります。R2Lテキスト挿入により、行やパラグラフの表示方法が混乱することを心配する必要がなくなるので、関数@code{bidi-string-mark-left-to-right}は削除されました。さらに、双方向表示に関連する、他の多くの関数と変数が削除されました。@code{U+200E}("left-to-right
mark")のような、Unicodeの方向文字は表示で特別な効果をもたなくなります。

@item
Emacsのウィンドウは、ほとんどがLispから隠蔽された内部状態をもつようになりました。内部的なウィンドウは、もはやLispから見えなくなります。@code{window-parent}のような関数、windowの配置に関連するwindowパラメーター、およびwindowローカルなバッファーリストはすべて削除されました。ウィンドウのリサイズに関する関数は、それらがあまりに小さければ、ウィンドウを削除できます。

バッファー表示を制御する、``アクション関数''の機能は、@code{display-buffer-overriding-action}と関連する変数、@code{display-buffer}の@var{action}引数、および他の関数が削除されました。Emacsがバッファーを表示するウィンドウを選択する方法をプログラム的に制御するためには、@code{pop-up-frames}と他の変数を正しく組み合わせてバインドする方法です。

@item
標準的な補完インターフェースは、変数@code{completion-extra-properties}、補完関数にたいする@code{metadata}アクションフラグ、``補完カテゴリー(completion
categories)''の排除により簡略化されました。Lispプログラマーは、補完のチューニング手法の選択肢を見つけるために途方に暮れるようなことは少なくなりましたが、あるパッケージが自身のニーズをこの合理的なインターフェースが満たさないことを見い出したときには、特別な補完機能を自身で実装しなければなりません。

@item
@code{copy-directory}は、目標ディレクトリーが既存であろうとなかろうと、同じように振る舞います。目標ディレクトリーが存在すれば、1つ目のディレクトリーをサブディレクトリーとしてコピーするのではなく、1つ目のディレクトリーの@emph{内容}を、目標ディレクトリーにコピーします(サブディレクトリーは再帰的に処理される)

@item
@code{delete-file}と@code{delete-directory}にたいする@var{trash}引数は削除されました。変数@code{delete-by-moving-to-trash}は、注意して使用しなければならなくなりました。これが非@code{nil}のときは常に、@code{delete-file}と@code{delete-directory}にたいするすべての呼び出しで、trashが使用されます。

@item
EmacsはSELinuxファイルコンテキストをサポートしなくなったので、@code{copy-file}の@var{preserve-selinux-context}引数は削除されました。@code{backup-buffer}のリターン値は、もはやSELinuxファイルコンテキストにたいするエントリーをもちません。

@item
テキストエリア内でのマウスクリック入力イベントでの、@var{position}リスト(@ref{Click
Events}を参照)のY座標は、テキストエリア上端ではなく、(もしあれば)ヘッダー行上端から数えるようになりました。

@item
メニューkeymap内のバインディング(@ref{Format of
Keymaps}を参照)は、以下のように定義内に追加の@var{cache}エントリーを必要とするかもしれなくなります:

@example
(@var{type} @var{item-name} @var{cache} . @var{binding})
@end example

@noindent
@c Not really NEWS-worthy then...
@var{cache}エントリーは、同じコマンドを呼び出すキーボードキーシーケンスを記録するために、Emacsにより内部的に使用されます。Lispプログラマーは決してこれを使用するべきではありません。

@item
@code{gnutls}ライブラリーは削除され、それに併なって関数@code{open-network-stream}が簡略化されました。暗号化されたネットワークを望むLispプログラムは、@command{starttls}や@command{gnutls-cli}のような、外部プログラムを呼び出さなければならなくなります。

@item
ツールバーはセパレーターを表示できなくなり、これによりグラフィカルなフレームすべてで、数ピクセルのスペースが開放されました。

@item
簡略化にたいする継続要求の一環として、他の多くの関数と変数が排除されました。
@end itemize
