# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-01-17 19:58+0900\n"
"PO-Revision-Date: 2019-01-22 01:29+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: nonascii.texi.orig:5
#, no-wrap
msgid "Non-ASCII Characters"
msgstr "Non-ASCII Characters"

#. type: chapter
#: nonascii.texi.orig:6
#, no-wrap
msgid "Non-@acronym{ASCII} Characters"
msgstr "Non-@acronym{ASCII} Characters"

#. type: cindex
#: nonascii.texi.orig:7
#, no-wrap
msgid "multibyte characters"
msgstr "multibyte characters"

#. type: cindex
#: nonascii.texi.orig:8
#, no-wrap
msgid "characters, multi-byte"
msgstr "characters, multi-byte"

#. type: cindex
#: nonascii.texi.orig:9
#, no-wrap
msgid "non-@acronym{ASCII} characters"
msgstr "non-@acronym{ASCII} characters"

#. type: Plain text
#: nonascii.texi.orig:13
msgid "This chapter covers the special issues relating to characters and how they are stored in strings and buffers."
msgstr "このチャプターは文字に関する特別な問題と、それらが文字列およびバッファーに格納される方法についてカバーします。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:33 nonascii.texi.orig:34
#, no-wrap
msgid "Text Representations"
msgstr "Text Representations"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "How Emacs represents text."
msgstr "Emacsがテキストを表す方法。"

#. type: node
#: nonascii.texi.orig:31 nonascii.texi.orig:144
#, no-wrap
msgid "Disabling Multibyte"
msgstr "Disabling Multibyte"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Controlling whether to use multibyte characters."
msgstr "マルチバイト使用を制御する。"

#. type: node
#: nonascii.texi.orig:31 nonascii.texi.orig:193
#, no-wrap
msgid "Converting Representations"
msgstr "Converting Representations"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Converting unibyte to multibyte and vice versa."
msgstr "ユニバイトとマルチバイトの相互変換。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:271 nonascii.texi.orig:272
#, no-wrap
msgid "Selecting a Representation"
msgstr "Selecting a Representation"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Treating a byte sequence as unibyte or multi."
msgstr "バイトシーケンスをユニバイトやマルチバイトとして扱う。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:326 nonascii.texi.orig:327
#, no-wrap
msgid "Character Codes"
msgstr "Character Codes"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "How unibyte and multibyte relate to codes of individual characters."
msgstr "ユニバイトやマルチバイトが個々の文字のコードと関わる方法。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:397 nonascii.texi.orig:398
#, no-wrap
msgid "Character Properties"
msgstr "Character Properties"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Character attributes that define their behavior and handling."
msgstr "文字の挙動と処理を定義する文字属性。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:632 nonascii.texi.orig:633
#, no-wrap
msgid "Character Sets"
msgstr "Character Sets"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "The space of possible character codes is divided into various character sets."
msgstr ""
"利用可能な文字コード空間はさまざまな文字セットに分割される。\n"
"The space of possible character codes is divided into various character sets."

#. type: node
#: nonascii.texi.orig:31 nonascii.texi.orig:758
#, no-wrap
msgid "Scanning Charsets"
msgstr "Scanning Charsets"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Which character sets are used in a buffer?"
msgstr "バッファーで使用されている文字セットは?"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:795 nonascii.texi.orig:796
#, no-wrap
msgid "Translation of Characters"
msgstr "Translation of Characters"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Translation tables are used for conversion."
msgstr "変換に使用される変換テーブル。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:897 nonascii.texi.orig:898
#, no-wrap
msgid "Coding Systems"
msgstr "Coding Systems"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Coding systems are conversions for saving files."
msgstr "コーディングシステムはファイル保存のための変換である。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:1852 nonascii.texi.orig:1853
#, no-wrap
msgid "Input Methods"
msgstr "Input Methods"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Input methods allow users to enter various non-ASCII characters without special keyboards."
msgstr "入力メソッドによりユーザーは特別なキーボードなしで非ASCII文字を入力できる。"

#. type: section
#: nonascii.texi.orig:31 nonascii.texi.orig:1924 nonascii.texi.orig:1925
#, no-wrap
msgid "Locales"
msgstr "Locales"

#. type: menuentry
#: nonascii.texi.orig:31
msgid "Interacting with the POSIX locale."
msgstr "POSIXロケールとの対話。"

#. type: cindex
#: nonascii.texi.orig:35
#, no-wrap
msgid "text representation"
msgstr "text representation"

#. type: Plain text
#: nonascii.texi.orig:40
msgid "Emacs buffers and strings support a large repertoire of characters from many different scripts, allowing users to type and display text in almost any known written language."
msgstr "Emacsのバッファーおよび文字列は、既知のスクリプトで記述されたほとんどすべてのテキストをユーザーがタイプしたり表示できるよう、多種多様な言語の広大な文字レパートリーをサポートします。"

#. type: cindex
#: nonascii.texi.orig:41
#, no-wrap
msgid "character codepoint"
msgstr "character codepoint"

#. type: cindex
#: nonascii.texi.orig:42
#, no-wrap
msgid "codespace"
msgstr "codespace"

#. type: cindex
#: nonascii.texi.orig:43
#, no-wrap
msgid "Unicode"
msgstr "Unicode"

#. type: Plain text
#: nonascii.texi.orig:54
msgid "To support this multitude of characters and scripts, Emacs closely follows the @dfn{Unicode Standard}.  The Unicode Standard assigns a unique number, called a @dfn{codepoint}, to each and every character.  The range of codepoints defined by Unicode, or the Unicode @dfn{codespace}, is @code{0..#x10FFFF} (in hexadecimal notation), inclusive.  Emacs extends this range with codepoints in the range @code{#x110000..#x3FFFFF}, which it uses for representing characters that are not unified with Unicode and @dfn{raw 8-bit bytes} that cannot be interpreted as characters.  Thus, a character codepoint in Emacs is a 22-bit integer."
msgstr "多種多様な文字およびスクリプトをサポートするために、Emacsは@dfn{Unicode標準(Unicode Standard)}に厳密にしたがいます。Unicode標準は、すべての文字にたいしてそれぞれ、@dfn{コードポイント(codepoint)}と呼ばれる一意な番号を割り当てています。コードポイントの範囲はUnicode、またはUnicode@dfn{コード空間(codespace)}により定義され、範囲は@code{0..#x10FFFF}(16進表記、範囲両端を含む)です。Emacsはこれを、範囲@code{#x110000..#x3FFFFF}のコードポイント範囲に拡張します。この範囲はUnicodeとして統一されていない文字や、文字として解釈できない@dfn{8ビットrawバイト(raw 8-bit bytes)}を表すために使用します。したがって、Emacs内の文字コードポイントは、22ビットの整数になります。"

#. type: cindex
#: nonascii.texi.orig:55
#, no-wrap
msgid "internal representation of characters"
msgstr "internal representation of characters"

#. type: cindex
#: nonascii.texi.orig:56
#, no-wrap
msgid "characters, representation in buffers and strings"
msgstr "characters, representation in buffers and strings"

#. type: cindex
#: nonascii.texi.orig:57
#, no-wrap
msgid "multibyte text"
msgstr "multibyte text"

#. type: Plain text
#: nonascii.texi.orig:70
msgid "To conserve memory, Emacs does not hold fixed-length 22-bit numbers that are codepoints of text characters within buffers and strings.  Rather, Emacs uses a variable-length internal representation of characters, that stores each character as a sequence of 1 to 5 8-bit bytes, depending on the magnitude of its codepoint@footnote{ This internal representation is based on one of the encodings defined by the Unicode Standard, called @dfn{UTF-8}, for representing any Unicode codepoint, but Emacs extends UTF-8 to represent the additional codepoints it uses for raw 8-bit bytes and characters not unified with Unicode.}.  For example, any @acronym{ASCII} character takes up only 1 byte, a Latin-1 character takes up 2 bytes, etc.  We call this representation of text @dfn{multibyte}."
msgstr "メモリー節約のため、Emacsはバッファーおよび文字列内のテキスト文字にたいするコードポイントである、22ビットの整数を固定長で保持しません。かわりに、Emacsは文字の内部表現として可変長を使用します。これは、そのコードポイントの値に応じて、各文字を5ビットから8ビットのバイトシーケンスとして格納するものです@footnote{この内部表現は、任意のUnicodeコードポイントを表すための、@dfn{UTF-8}と呼ばれるUnicode標準によるエンコーディングの1つにもとづきますが、8ビットrawバイトおよびUnicodeに統一されていない文字を使用する追加のコードポイントを表現するために、EmacsはUTF-8を拡張しています。}。たとえばすべての@acronym{ASCII}文字は1バイト、Latin-1文字は2バイトといった具合です。わたしたちはこれを、テキストの@dfn{マルチバイト(multibyte)}表現と呼んでいます。"

#. type: Plain text
#: nonascii.texi.orig:76
msgid "Outside Emacs, characters can be represented in many different encodings, such as ISO-8859-1, GB-2312, Big-5, etc.  Emacs converts between these external encodings and its internal representation, as appropriate, when it reads text into a buffer or a string, or when it writes text to a disk file or passes it to some other process."
msgstr "Emacs外部では、ISO-8859-1、GB-2312、Big-5等のような多種の異なるエンコーディングで文字を表すことができます。Emacsはバッファーまたは文字列へのテキスト読み込み時、およびディスク状のファイルへのテキスト書き込みや他プロセスへの引き渡し時に、これらの外部エンコーディングと、その内部表現の間で適切な変換を行います。"

#. type: Plain text
#: nonascii.texi.orig:82
msgid "Occasionally, Emacs needs to hold and manipulate encoded text or binary non-text data in its buffers or strings.  For example, when Emacs visits a file, it first reads the file's text verbatim into a buffer, and only then converts it to the internal representation.  Before the conversion, the buffer holds encoded text."
msgstr "Emacsがエンコード済みテキストや非テキストデータを、バッファーや文字列に保持、あるいは操作する必要がある場合も時折あります。たとえばEmacsがファイルをvisitする際、まずそのファイルのテキストをそのままバッファーに読み込み、その後にのみそれを内部表現に変換します。この変換前にバッファーに保持されてくださいのは、エンコード済みのテキストです。"

#. type: cindex
#: nonascii.texi.orig:83
#, no-wrap
msgid "unibyte text"
msgstr "unibyte text"

#. type: Plain text
#: nonascii.texi.orig:91
msgid "Encoded text is not really text, as far as Emacs is concerned, but rather a sequence of raw 8-bit bytes.  We call buffers and strings that hold encoded text @dfn{unibyte} buffers and strings, because Emacs treats them as a sequence of individual bytes.  Usually, Emacs displays unibyte buffers and strings as octal codes such as @code{\\237}.  We recommend that you never use unibyte buffers and strings except for manipulating encoded text or binary non-text data."
msgstr "Emacsに関する限り、エンコードされたテキストは実際のテキストではなく、8ビットrawバイトです。エンコード済みテキストを保持するバッファーおよび文字列は、Emacsがそれらを個々のバイトシーケンスとしてアツカウことから、@dfn{ユニバイト(unibyte)}のバッファーまたは文字列と呼んでいます。Emacsは通常、ユニバイトのバッファーおよび文字列を、@code{\\237}のような8進コードで表示します。エンコード済みテキストやバイナリー非テキストデータを処理する場合を除き、ユニバイトバッファーとユニバイト文字列は決して使用しないよう推奨します。"

#. type: Plain text
#: nonascii.texi.orig:96
msgid "In a buffer, the buffer-local value of the variable @code{enable-multibyte-characters} specifies the representation used.  The representation for a string is determined and recorded in the string when the string is constructed."
msgstr "バッファーにおいては、変数@code{enable-multibyte-characters}のバッファーロケールな値が、使用する表現を指定します。文字列での表現は、その文字列構築時に判断して、それを文字列内に記録します。"

#. type: vindex
#: nonascii.texi.orig:97 nonascii.texi.orig:177
#, no-wrap
msgid "enable-multibyte-characters"
msgstr "enable-multibyte-characters"

#. type: defvar
#: nonascii.texi.orig:101
msgid "This variable specifies the current buffer's text representation.  If it is non-@code{nil}, the buffer contains multibyte text; otherwise, it contains unibyte encoded text or binary non-text data."
msgstr "この変数は、カレントバッファーのテキスト表現を指定する。非@code{nil}ならバッファーはマルチバイトてきましたわ含み、それ以外ならエンコード済みユニバイトテキスト、またはバイナリー非テキストデータが含れる。"

#. type: defvar
#: nonascii.texi.orig:104
msgid "You cannot set this variable directly; instead, use the function @code{set-buffer-multibyte} to change a buffer's representation."
msgstr "この変数は直接セットできない。バッファーの表現を変更するには、かわりに関数@code{set-buffer-multibyte}を使用すること。"

#. type: defun
#: nonascii.texi.orig:106
#, no-wrap
msgid "position-bytes position"
msgstr "position-bytes position"

#. type: defun
#: nonascii.texi.orig:112
msgid "Buffer positions are measured in character units.  This function returns the byte-position corresponding to buffer position @var{position} in the current buffer.  This is 1 at the start of the buffer, and counts upward in bytes.  If @var{position} is out of range, the value is @code{nil}."
msgstr "バッファー位置は文字単位で測られる。この関数は、カレントバッファー内のバッファー位置を、それに対応するバイト位置でリターンする。これはバッファー先頭を1として、バイト単位で増加方向に数えられる。@var{position}が範囲外なら、値は@code{nil}になる。"

#. type: defun
#: nonascii.texi.orig:114
#, no-wrap
msgid "byte-to-position byte-position"
msgstr "byte-to-position byte-position"

#. type: defun
#: nonascii.texi.orig:124
msgid "Return the buffer position, in character units, corresponding to given @var{byte-position} in the current buffer.  If @var{byte-position} is out of range, the value is @code{nil}.  In a multibyte buffer, an arbitrary value of @var{byte-position} can be not at character boundary, but inside a multibyte sequence representing a single character; in this case, this function returns the buffer position of the character whose multibyte sequence includes @var{byte-position}.  In other words, the value does not change for all byte positions that belong to the same character."
msgstr "カレントバッファー内で、与えられた@var{byte-position}に対応するバッファー位置を、文字単位でリターンする。@var{byte-position}が範囲外なら、値は@code{nil}になる。マルチバイトバッファーでは、@var{byte-position}の任意の値が文字境界上になく、1文字として表現されたマルチバイトシーケンス内にあるかもしれない。この場合、関数はその文字のマルチバイトシーケンスが@var{byte-position}を含むようなバッファー位置をリターンする。他の言い方をすると、この値は同じ文字に属するすべてのバイト位置にたいして変化しない。"

#. type: defun
#: nonascii.texi.orig:126
#, no-wrap
msgid "multibyte-string-p string"
msgstr "multibyte-string-p string"

#. type: defun
#: nonascii.texi.orig:130
msgid "Return @code{t} if @var{string} is a multibyte string, @code{nil} otherwise.  This function also returns @code{nil} if @var{string} is some object other than a string."
msgstr "@var{string}がマルチバイト文字列なら@code{t}、それ以外は@code{nil}をリターンする。この関数は、@var{string}が文字列以外の場合にも、@code{nil}をリターンする。"

#. type: defun
#: nonascii.texi.orig:132
#, no-wrap
msgid "string-bytes string"
msgstr "string-bytes string"

#. type: cindex
#: nonascii.texi.orig:133
#, no-wrap
msgid "string, number of bytes"
msgstr "string, number of bytes"

#. type: defun
#: nonascii.texi.orig:137
msgid "This function returns the number of bytes in @var{string}.  If @var{string} is a multibyte string, this can be greater than @code{(length @var{string})}."
msgstr "この関数は、@var{string}内のバイトの数をリターンする。@var{string}がマルチバイト文字列なら、これは@code{(length @var{string})}より大きいかもしれない。"

#. type: defun
#: nonascii.texi.orig:139
#, no-wrap
msgid "unibyte-string &rest bytes"
msgstr "unibyte-string &rest bytes"

#. type: defun
#: nonascii.texi.orig:142
msgid "This function concatenates all its argument @var{bytes} and makes the result a unibyte string."
msgstr "この関数は引数@var{bytes}をすべて結合して、その結果をユニバイト文字列で作成する。"

#. type: section
#: nonascii.texi.orig:145
#, no-wrap
msgid "Disabling Multibyte Characters"
msgstr "Disabling Multibyte Characters"

#. type: cindex
#: nonascii.texi.orig:146
#, no-wrap
msgid "disabling multibyte"
msgstr "disabling multibyte"

#. type: Plain text
#: nonascii.texi.orig:153
msgid "By default, Emacs starts in multibyte mode: it stores the contents of buffers and strings using an internal encoding that represents non-@acronym{ASCII} characters using multi-byte sequences.  Multibyte mode allows you to use all the supported languages and scripts without limitations."
msgstr "デフォルトでは、Emacsはマルチバイトモードで開始します。Emacsは、マルチバイトシーケンスを使用して非@acronym{ASCII}文字を表現する内部エンコーディングを使用することにより、バッファーおよび文字列のコンテンツを格納します。マルチバイトモードではサポートされるすべての言語とスクリプトを使用できます。"

#. type: cindex
#: nonascii.texi.orig:154
#, no-wrap
msgid "turn multibyte support on or off"
msgstr "turn multibyte support on or off"

#. type: Plain text
#: nonascii.texi.orig:163
msgid "Under very special circumstances, you may want to disable multibyte character support, for a specific buffer.  When multibyte characters are disabled in a buffer, we call that @dfn{unibyte mode}.  In unibyte mode, each character in the buffer has a character code ranging from 0 through 255 (0377 octal); 0 through 127 (0177 octal) represent @acronym{ASCII} characters, and 128 (0200 octal) through 255 (0377 octal) represent non-@acronym{ASCII} characters."
msgstr "非常に特別な状況下においては、特定のバッファーでマルチバイト文字のサポートを無効にしたいときがあるかもしれません。あるバッファーにおいてマルチバイト文字が無効になっているときは、それを@dfn{ユニバイトモード(unibyte mode)}と呼びます。ユニバイトモードでは、バッファー内の各文字は0から255(8進の0377)の範囲の文字コードをもちます。0から127(8進の0177)は@acronym{ASCII}文字、128から255(8進の0377)は非@acronym{ASCII}文字を表します。"

#. type: Plain text
#: nonascii.texi.orig:175
msgid "To edit a particular file in unibyte representation, visit it using @code{find-file-literally}.  @xref{Visiting Functions}.  You can convert a multibyte buffer to unibyte by saving it to a file, killing the buffer, and visiting the file again with @code{find-file-literally}.  Alternatively, you can use @kbd{C-x @key{RET} c} (@code{universal-coding-system-argument}) and specify @samp{raw-text} as the coding system with which to visit or save a file.  @xref{Text Coding, , Specifying a Coding System for File Text, emacs, GNU Emacs Manual}.  Unlike @code{find-file-literally}, finding a file as @samp{raw-text} doesn't disable format conversion, uncompression, or auto mode selection."
msgstr "特定のファイルをユニバイト表現で編集するためには、@code{find-file-literally}を使用してファイルをvisitします。@ref{Visiting Functions}を参照してください。マルチバイトバッファーをファイルに保存してバッファーをkillした後に、再びそのファイルを@code{find-file-literally}でvisitすることにより、マルチバイトバッファーをユニバイトに変換できます。かわりに@kbd{C-x @key{RET} c}(@code{universal-coding-system-argument})を使用して、ファイルをvisitまたは保存するコーディングシステムとして@samp{raw-text}を指定することもできます。@ref{Text Coding, , Specifying a Coding System for File Text, emacs, GNU Emacs Manual}を参照してください。@code{find-file-literally}とは異なり、@samp{raw-text}としてファイルをvisitしてもフォーマット変換、解凍、自動的なモード選択は無効になりません。"

#. type: Plain text
#: nonascii.texi.orig:188
msgid "The buffer-local variable @code{enable-multibyte-characters} is non-@code{nil} in multibyte buffers, and @code{nil} in unibyte ones.  The mode line also indicates whether a buffer is multibyte or not.  With a graphical display, in a multibyte buffer, the portion of the mode line that indicates the character set has a tooltip that (amongst other things) says that the buffer is multibyte.  In a unibyte buffer, the character set indicator is absent.  Thus, in a unibyte buffer (when using a graphical display) there is normally nothing before the indication of the visited file's end-of-line convention (colon, backslash, etc.), unless you are using an input method."
msgstr "バッファーローカル変数@code{enable-multibyte-characters}は、マルチバイトバッファーなら非@code{nil}、ユニバイトバッファーなら@code{nil}になります。マルチバイトバッファーかどうかは、モードラインにも示されます。グラフィカルなディスプレイでのマルチバイトバッファーは、文字セット話示すモードライン部分ぬ、そのバッファーがマルチバイトであること(とそれ以外の事項)を告げるツールチップがあります。ユニバイトバッファーでは、文字セットのインジケーターはありません。したがって(グラフィカルなディスプレイ使用時の)ユニバイトバッファーでは、入力メソッドを使用していなければ、visitしているファイルの行末変換(コロン、バックスラッシュ等)の標識の前には通常何も標識はありません。"

#. type: findex
#: nonascii.texi.orig:189
#, no-wrap
msgid "toggle-enable-multibyte-characters"
msgstr "toggle-enable-multibyte-characters"

#. type: Plain text
#: nonascii.texi.orig:192
msgid "You can turn off multibyte support in a specific buffer by invoking the command @code{toggle-enable-multibyte-characters} in that buffer."
msgstr "特定のバッファーでマルチバイトサポートをオフに切り替えるには、そのバッファー内でコマンド@code{toggle-enable-multibyte-characters}を呼び出してください。"

#. type: section
#: nonascii.texi.orig:194
#, no-wrap
msgid "Converting Text Representations"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:202
msgid "Emacs can convert unibyte text to multibyte; it can also convert multibyte text to unibyte, provided that the multibyte text contains only @acronym{ASCII} and 8-bit raw bytes.  In general, these conversions happen when inserting text into a buffer, or when putting text from several strings together in one string.  You can also explicitly convert a string's contents to either representation."
msgstr "Emacsはユニバイトテキストをマルチバイトに変換できます。マルチバイトテキストに含まれるのが@acronym{ASCII}と8ビットrawバイトだけという条件つきで、マルチバイトテキストからユニバイトへの変換もできます。一般的にこれらの変換はバッファーへのテキスト挿入時、または複数の文字列を1つの文字列に合わせてテキストにputするときに発生します。文字列のコンテンツを、いずれかの表現に明示的に変換することもできます。"

#. type: Plain text
#: nonascii.texi.orig:208
msgid "Emacs chooses the representation for a string based on the text from which it is constructed.  The general rule is to convert unibyte text to multibyte text when combining it with other multibyte text, because the multibyte representation is more general and can hold whatever characters the unibyte text has."
msgstr "Emacsは、そのテキストの構成にもとづいて、文字列の表現を選択します。一般的なルールでは、ユニバイトテキストが他のマルチバイトテキストと組み合わされている場合は、マルチバイト表現のほうがより一般的であり、ユニバイトテキストのすべての文字を保有できるので、ユニバイトテキストをマルチバイトテキストに変換します。"

#. type: Plain text
#: nonascii.texi.orig:218
msgid "When inserting text into a buffer, Emacs converts the text to the buffer's representation, as specified by @code{enable-multibyte-characters} in that buffer.  In particular, when you insert multibyte text into a unibyte buffer, Emacs converts the text to unibyte, even though this conversion cannot in general preserve all the characters that might be in the multibyte text.  The other natural alternative, to convert the buffer contents to multibyte, is not acceptable because the buffer's representation is a choice made by the user that cannot be overridden automatically."
msgstr "バッファーへのテキスト挿入時、Emacsはそのバッファーの@code{enable-multibyte-characters}で指定されるように、テキストをそのバッファーの表現に変換します。特にユニバイトバッファーへマルチバイトテキストを挿入する際は、たとえ一般的にはマルチバイトテキスト内のすべての文字を保持することはできなくても、Emacsはテキストをユニバイトに変換します。バッファーコンテンツをマルチバイトに変換するという自然な代替方法は、そのバッファーの表現が自動的にオーバーライドできないユーザーによる選択にもとづく表現であるため、受け入れられません。"

#. type: Plain text
#: nonascii.texi.orig:222
msgid "Converting unibyte text to multibyte text leaves @acronym{ASCII} characters unchanged, and converts bytes with codes 128 through 255 to the multibyte representation of raw eight-bit bytes."
msgstr "ユニバイトテキストからマルチバイトテキストへの変換では、@acronym{ASCII}文字は未変更のまま残され、128から255のコードをもつバイトが8ビットrawバイトのマルチバイト表現に変換されます。"

#. type: Plain text
#: nonascii.texi.orig:228
msgid "Converting multibyte text to unibyte converts all @acronym{ASCII} and eight-bit characters to their single-byte form, but loses information for non-@acronym{ASCII} characters by discarding all but the low 8 bits of each character's codepoint.  Converting unibyte text to multibyte and back to unibyte reproduces the original unibyte text."
msgstr "マルチバイトテキストからユニバイトテキストへの変換では、すべての@acronym{ASCII}と8ビット文字が、それらの1バイト形式に変換されますが、各文字のコードポイントの描い8ビット以外は破棄されるため、非@acronym{ASCII}文字の情報は失われます。ユニバイトテキストからマルチバイトテキストに変換して、それをユニバイトに戻せば、元のユニバイトテキストが再生成されます。"

#. type: Plain text
#: nonascii.texi.orig:231
msgid "The next two functions either return the argument @var{string}, or a newly created string with no text properties."
msgstr "以下の2つの関数は、引数@var{string}、またはテキストプロパティをもたない新たに作成された文字列のいずれかをリターンします。"

#. type: defun
#: nonascii.texi.orig:232
#, no-wrap
msgid "string-to-multibyte string"
msgstr "string-to-multibyte string"

#. type: defun
#: nonascii.texi.orig:240
msgid "This function returns a multibyte string containing the same sequence of characters as @var{string}.  If @var{string} is a multibyte string, it is returned unchanged.  The function assumes that @var{string} includes only @acronym{ASCII} characters and raw 8-bit bytes; the latter are converted to their multibyte representation corresponding to the codepoints @code{#x3FFF80} through @code{#x3FFFFF}, inclusive (@pxref{Text Representations, codepoints})."
msgstr "この関数は、@var{string}と同じ文字シーケンスを含むマルチバイト文字列をリターンする。@var{string}がマルチバイト文字列なら、それが未変更のままリターンされる。この関数は、@var{string}が@acronym{ASCII}文字と8ビットrawバイトだけを含むと仮定する。後者は@code{#x3FFF80}から@code{#x3FFFFF}(両端を含む)に対応する、8ビットrawバイトのマルチバイト表現に変換される(@ref{Text Representations, codepoints}を参照)。"

#. type: defun
#: nonascii.texi.orig:242
#, no-wrap
msgid "string-to-unibyte string"
msgstr "string-to-unibyte string"

#. type: defun
#: nonascii.texi.orig:249
msgid "This function returns a unibyte string containing the same sequence of characters as @var{string}.  It signals an error if @var{string} contains a non-@acronym{ASCII} character.  If @var{string} is a unibyte string, it is returned unchanged.  Use this function for @var{string} arguments that contain only @acronym{ASCII} and eight-bit characters."
msgstr "この関数は、@var{string}と同じ文字シーケンスを含む、ユニバイト文字列をリターンする。@var{string}に非@acronym{ASCII}文字が含まれる場合は、エラーをシグナルする。@var{string}がユニバイト文字列なら、それが未変更のままリターンされる。@acronym{ASCII}文字と8ビット文字だけを含む@var{string}引数にたいしてのみ、この関数を使用すること。"

#. type: defun
#: nonascii.texi.orig:252
#, no-wrap
msgid "byte-to-string byte"
msgstr "byte-to-string byte"

#. type: cindex
#: nonascii.texi.orig:253
#, no-wrap
msgid "byte to string"
msgstr "byte to string"

#. type: defun
#: nonascii.texi.orig:257
msgid "This function returns a unibyte string containing a single byte of character data, @var{character}.  It signals an error if @var{character} is not an integer between 0 and 255."
msgstr "この関数は、文字データ@var{byte}の単一バイトを含むユニバイト文字列をリターンする。@var{byte}が0から255までの整数でなければ、エラーをシグナルする。"

#. type: defun
#: nonascii.texi.orig:259
#, no-wrap
msgid "multibyte-char-to-unibyte char"
msgstr "multibyte-char-to-unibyte char"

#. type: defun
#: nonascii.texi.orig:263
msgid "This converts the multibyte character @var{char} to a unibyte character, and returns that character.  If @var{char} is neither @acronym{ASCII} nor eight-bit, the function returns @minus{}1."
msgstr "これはマルチバイト文字@var{char}をユニバイト文字に変換して、その文字をリターンする。@var{char}が@acronym{ASCII}と8ビットのいずれでもなければ、この関数は@minus{}1をリターンする。"

#. type: defun
#: nonascii.texi.orig:265
#, no-wrap
msgid "unibyte-char-to-multibyte char"
msgstr "unibyte-char-to-multibyte char"

#. type: defun
#: nonascii.texi.orig:269
msgid "This convert the unibyte character @var{char} to a multibyte character, assuming @var{char} is either @acronym{ASCII} or raw 8-bit byte."
msgstr "これは@var{char}が@acronym{ASCII}か8ビットrawバイトのいずれかであると仮定して、ユニバイト文字@acronym{ASCII}をマルチバイト文字に変換する。"

#. type: Plain text
#: nonascii.texi.orig:276
msgid "Sometimes it is useful to examine an existing buffer or string as multibyte when it was unibyte, or vice versa."
msgstr "既存のバッファーまたは文字列がユニバイトの際にそれらをマルチバイトとして調べたり、その逆を行うことが有用なときがあります。"

#. type: defun
#: nonascii.texi.orig:277
#, no-wrap
msgid "set-buffer-multibyte multibyte"
msgstr "set-buffer-multibyte multibyte"

#. type: defun
#: nonascii.texi.orig:281
msgid "Set the representation type of the current buffer.  If @var{multibyte} is non-@code{nil}, the buffer becomes multibyte.  If @var{multibyte} is @code{nil}, the buffer becomes unibyte."
msgstr "カレントバッファーの表現タイプをセットする。@var{multibyte}が非@code{nil}ならバッファーはマルチバイト、@code{nil}ならユニバイトになる。"

#. type: defun
#: nonascii.texi.orig:290
msgid "This function leaves the buffer contents unchanged when viewed as a sequence of bytes.  As a consequence, it can change the contents viewed as characters; for instance, a sequence of three bytes which is treated as one character in multibyte representation will count as three characters in unibyte representation.  Eight-bit characters representing raw bytes are an exception.  They are represented by one byte in a unibyte buffer, but when the buffer is set to multibyte, they are converted to two-byte sequences, and vice versa."
msgstr "この関数は、バイトシーケンスとして認識時には、バッファーを未変更のままとする。結果として、文字として認識時にはコンテンツを変更できる。たとえば、マルチバイト表現では1文字として扱われる3バイトのシーケンスは、ユニバイト表現では3文字として数えられるだろう。例外はrawバイトを表す8ビット文字である。これらはユニバイトバッファーでは1バイトで表現されるが、バッファーをマルチバイトにセットした際は2バイトのシーケンスに変換され、その逆の変換も行われる。"

#. type: defun
#: nonascii.texi.orig:295
msgid "This function sets @code{enable-multibyte-characters} to record which representation is in use.  It also adjusts various data in the buffer (including overlays, text properties and markers) so that they cover the same text as they did before."
msgstr "この関数は、どの表現が使用されているかを記録するために、@code{enable-multibyte-characters}をセットする。これは以前の同じテキストをカバーするよう、バッファー内のさまざまなデータ(オーバーレイ、テキストプロパティ、マーカーを含む)を調整する。"

#. type: defun
#: nonascii.texi.orig:299
msgid "This function signals an error if the buffer is narrowed, since the narrowing might have occurred in the middle of multibyte character sequences."
msgstr "ナローイングはマルチバイト文字シーケンス中間で発生するかもしれないので、この関数はバッファーがナローイングされている場合はエラーをシグナルする。"

#. type: defun
#: nonascii.texi.orig:303
msgid "This function also signals an error if the buffer is an indirect buffer.  An indirect buffer always inherits the representation of its base buffer."
msgstr "そのバッファーがインダイレクトバッファー(indirect buffer: 間接バッファー)の場合も、エラーをシグナルする。インダイレクトバッファーは、常にベースバッファー(base buffer: 基底バッファー)の表現を継承する。"

#. type: defun
#: nonascii.texi.orig:305
#, no-wrap
msgid "string-as-unibyte string"
msgstr "string-as-unibyte string"

#. type: defun
#: nonascii.texi.orig:313
msgid "If @var{string} is already a unibyte string, this function returns @var{string} itself.  Otherwise, it returns a new string with the same bytes as @var{string}, but treating each byte as a separate character (so that the value may have more characters than @var{string}); as an exception, each eight-bit character representing a raw byte is converted into a single byte.  The newly-created string contains no text properties."
msgstr "@var{string}がすでにユニバイト文字列なら、この関数は@var{string}自身をリターンする。それ以外は@var{string}と同じバイトだが、それぞれの文字を個別の文字としてとして扱い、新たな文字列をリターンする(値は@var{string}より多くの文字をもつかもしれない)。例外として、rawバイトを表す8ビット文字はそれぞれ、単一のバイトに変換される。新たに作成された文字列に、テキストプロパティは含まれない。"

#. type: defun
#: nonascii.texi.orig:315
#, no-wrap
msgid "string-as-multibyte string"
msgstr "string-as-multibyte string"

#. type: defun
#: nonascii.texi.orig:324
msgid "If @var{string} is a multibyte string, this function returns @var{string} itself.  Otherwise, it returns a new string with the same bytes as @var{string}, but treating each multibyte sequence as one character.  This means that the value may have fewer characters than @var{string} has.  If a byte sequence in @var{string} is invalid as a multibyte representation of a single character, each byte in the sequence is treated as a raw 8-bit byte.  The newly-created string contains no text properties."
msgstr "@var{string}がすでにマルチバイト文字列なら、この関数は@var{string}自身をリターンする。それ以外は@var{string}と同じバイトだが、それぞれのマルチバイトシーケンスを1つの文字としてとして扱い、新たな文字列をリターンする。これは、値が@var{string}より少ない文字をもつかもしれないことを意味する。@var{string}内のバイトシーケンスが、単一文字のマルチバイト表現として無効なら、そのシーケンスないの各バイトは、8ビットrawバイトとして扱われる。新たに作成された文字列には、テキストプロパティは含まれない"

#. type: cindex
#: nonascii.texi.orig:328
#, no-wrap
msgid "character codes"
msgstr "character codes"

#. type: Plain text
#: nonascii.texi.orig:338
msgid "The unibyte and multibyte text representations use different character codes.  The valid character codes for unibyte representation range from 0 to @code{#xFF} (255)---the values that can fit in one byte.  The valid character codes for multibyte representation range from 0 to @code{#x3FFFFF}.  In this code space, values 0 through @code{#x7F} (127) are for @acronym{ASCII} characters, and values @code{#x80} (128) through @code{#x3FFF7F} (4194175) are for non-@acronym{ASCII} characters."
msgstr "ユニバイトおよびマルチバイトのテキスト表現は、異なる文字コードを使用します。ユニバイト表現にたいして有効な文字コードの範囲は0から@code{#xFF}(255)で、これは1バイトに収まる値です。マルチバイト表現にたいして有効な文字コードの範囲は、0から@code{#x3FFFFF}です。このコード空間では値0から@code{#x7F}(127)が@acronym{ASCII}文字用、値@code{#x80}(128)から@code{#x3FFF7F}(4194175)が非@acronym{ASCII}文字用になります。"

#. type: Plain text
#: nonascii.texi.orig:345
msgid "Emacs character codes are a superset of the Unicode standard.  Values 0 through @code{#x10FFFF} (1114111) correspond to Unicode characters of the same codepoint; values @code{#x110000} (1114112)  through @code{#x3FFF7F} (4194175) represent characters that are not unified with Unicode; and values @code{#x3FFF80} (4194176) through @code{#x3FFFFF} (4194303) represent eight-bit raw bytes."
msgstr "Emacsの文字コードは、Unicode標準の上位集合(superset)です。値0から@code{#x10FFFF}(1114111)は、同じコードポイントのUnicode文字に対応します。値@code{#x110000}(1114112)から@code{#x3FFF7F}(4194175)は、Unicodeに統一されていない文字を、値@code{#x3FFF80} (4194176)から@code{#x3FFFFF}(4194303)は8ビットrawバイトを表します。"

#. type: defun
#: nonascii.texi.orig:346
#, no-wrap
msgid "characterp charcode"
msgstr "characterp charcode"

#. type: defun
#: nonascii.texi.orig:349
msgid "This returns @code{t} if @var{charcode} is a valid character, and @code{nil} otherwise."
msgstr "これは@var{charcode}が有効な文字なら@code{t}、それ以外は@code{nil}をリターンする。"

#. type: group
#: nonascii.texi.orig:354
#, no-wrap
msgid ""
"(characterp 65)\n"
"     @result{} t\n"
msgstr ""
"(characterp 65)\n"
"     @result{} t\n"

#. type: group
#: nonascii.texi.orig:358
#, no-wrap
msgid ""
"(characterp 4194303)\n"
"     @result{} t\n"
msgstr ""
"(characterp 4194303)\n"
"     @result{} t\n"

#. type: group
#: nonascii.texi.orig:362
#, no-wrap
msgid ""
"(characterp 4194304)\n"
"     @result{} nil\n"
msgstr ""
"(characterp 4194304)\n"
"     @result{} nil\n"

#. type: cindex
#: nonascii.texi.orig:366
#, no-wrap
msgid "maximum value of character codepoint"
msgstr "maximum value of character codepoint"

#. type: cindex
#: nonascii.texi.orig:367
#, no-wrap
msgid "codepoint, largest value"
msgstr "codepoint, largest value"

#. type: defun
#: nonascii.texi.orig:368
#, no-wrap
msgid "max-char"
msgstr "max-char"

#. type: defun
#: nonascii.texi.orig:371
msgid "This function returns the largest value that a valid character codepoint can have."
msgstr "この関数は、有効な文字コードポイントがもち得る最大の値をリターンする。"

#. type: group
#: nonascii.texi.orig:376
#, no-wrap
msgid ""
"(characterp (max-char))\n"
"     @result{} t\n"
msgstr ""
"(characterp (max-char))\n"
"     @result{} t\n"

#. type: group
#: nonascii.texi.orig:380
#, no-wrap
msgid ""
"(characterp (1+ (max-char)))\n"
"     @result{} nil\n"
msgstr ""
"(characterp (1+ (max-char)))\n"
"     @result{} nil\n"

#. type: defun
#: nonascii.texi.orig:384
#, no-wrap
msgid "get-byte &optional pos string"
msgstr "get-byte &optional pos string"

#. type: defun
#: nonascii.texi.orig:392
msgid "This function returns the byte at character position @var{pos} in the current buffer.  If the current buffer is unibyte, this is literally the byte at that position.  If the buffer is multibyte, byte values of @acronym{ASCII} characters are the same as character codepoints, whereas eight-bit raw bytes are converted to their 8-bit codes.  The function signals an error if the character at @var{pos} is non-@acronym{ASCII}."
msgstr "この関数は、カレントバッファー内の文字位置@var{pos}にあるバイトをリターンする。カレントバッファーがユニバイトなら、その位置のバイトをそのままリターンする。バッファーがマルチバイトの場合は、8ビットrawバイトは8ビットコードに変換される一方、@acronym{ASCII}文字のバ値は文字コードポイントと同じになる。この関数は、@var{pos}にある文字が非@acronym{ASCII}なら、エラーをシグナルする。"

#. type: defun
#: nonascii.texi.orig:395
msgid "The optional argument @var{string} means to get a byte value from that string instead of the current buffer."
msgstr "オプション引数@var{string}は、カレントバッファーのかわりに、文字列からバイト値を得ることを意味する。"

#. type: cindex
#: nonascii.texi.orig:399
#, no-wrap
msgid "character properties"
msgstr "character properties"

#. type: Plain text
#: nonascii.texi.orig:404
msgid "A @dfn{character property} is a named attribute of a character that specifies how the character behaves and how it should be handled during text processing and display.  Thus, character properties are an important part of specifying the character's semantics."
msgstr "@dfn{文字プロパティ(character property}とは、その文字の振る舞いと、テキストが処理および表示される間どのように処理されるべきかを指定する、名前つきの文字属性です。したがって文字プロパティは、その文字の意味を指定するための重要な一部です。"

#. type: Plain text
#: nonascii.texi.orig:418
msgid "On the whole, Emacs follows the Unicode Standard in its implementation of character properties.  In particular, Emacs supports the @uref{http://www.unicode.org/reports/tr23/, Unicode Character Property Model}, and the Emacs character property database is derived from the Unicode Character Database (@acronym{UCD}).  See the @uref{http://www.unicode.org/versions/Unicode6.2.0/ch04.pdf, Character Properties chapter of the Unicode Standard}, for a detailed description of Unicode character properties and their meaning.  This section assumes you are already familiar with that chapter of the Unicode Standard, and want to apply that knowledge to Emacs Lisp programs."
msgstr "全体として、Emacsは自身の文字プロパティ実装においてはUnicode標準にしたがいます。特にEmacsは@uref{http://www.unicode.org/reports/tr23/, Unicode Character Property Model}をサポートしており、Emacs文字プロパティデータベースはUnicode文字データベース(@acronym{UCD}: Unicode Character Database)から派生したものです。Unicode文字プロパティとその意味についての詳細な説明は、@uref{http://www.unicode.org/versions/Unicode6.2.0/ch04.pdf, Character Properties chapter of the Unicode Standard}を参照してください。このセクションでは、あなたがすでにUnicode標準の該当する章に親しんでいて、その知識をEmacs Lispプログラムに適用したいものと仮定します。"

#. type: Plain text
#: nonascii.texi.orig:428
msgid "In Emacs, each property has a name, which is a symbol, and a set of possible values, whose types depend on the property; if a character does not have a certain property, the value is @code{nil}.  As a general rule, the names of character properties in Emacs are produced from the corresponding Unicode properties by downcasing them and replacing each @samp{_} character with a dash @samp{-}.  For example, @code{Canonical_Combining_Class} becomes @code{canonical-combining-class}.  However, sometimes we shorten the names to make their use easier."
msgstr "Emacsでは、各プロパティは名前をもつシンボルであり、そのシンボルは利用可能な値セットをもち、値の型はプロパティに依存します。ある文字が特定のプロパティをもたなければ、その値は@code{nil}になります。一般的なルールとして、Emacsでの文字プロパティ名は、対応するUnicodeプロパティ名を小文字にして、文字@samp{_}をダッシュ文字@samp{-}で置き換えることにより生成されます。たとえば@code{Canonical_Combining_Class}は@code{canonical-combining-class}となります。しかし簡単に使用できるように、名前を短くすることもあります。"

#. type: cindex
#: nonascii.texi.orig:429
#, no-wrap
msgid "unassigned character codepoints"
msgstr "unassigned character codepoints"

#. type: Plain text
#: nonascii.texi.orig:434
msgid "Some codepoints are left @dfn{unassigned} by the @acronym{UCD}---they don't correspond to any character.  The Unicode Standard defines default values of properties for such codepoints; they are mentioned below for each property."
msgstr "@acronym{UCD}によりいくつかのコードポイントは@dfn{未割り当て(unassigned)}のまま残されており、それらに対応する文字はありません。Unicode標準は、そのようなコードポイントのプロパティにたいしてデフォルト値を定義しています。それらについては、以下の各プロパティごとに注記しています。"

#. type: Plain text
#: nonascii.texi.orig:437
msgid "Here is the full list of value types for all the character properties that Emacs knows about:"
msgstr "以下は、Emacsが関知するすべての文字プロパティにたいする、値タイプの完全なリストです:"

#. type: item
#: nonascii.texi.orig:439
#, no-wrap
msgid "name"
msgstr "name"

#. type: table
#: nonascii.texi.orig:444
msgid "Corresponds to the @code{Name} Unicode property.  The value is a string consisting of upper-case Latin letters A to Z, digits, spaces, and hyphen @samp{-} characters.  For unassigned codepoints, the value is @code{nil}."
msgstr "Unicodeプロパティ@code{Name}に対応する。値はラテン大文字のAからZ、数字、スペース、ハイフン@samp{-}の文字から構成される文字列である。未割り当てのコードポイントにたいする値は@code{nil}。"

#. type: cindex
#: nonascii.texi.orig:445
#, no-wrap
msgid "unicode general category"
msgstr "unicode general category"

#. type: item
#: nonascii.texi.orig:446
#, no-wrap
msgid "general-category"
msgstr "general-category"

#. type: table
#: nonascii.texi.orig:451
msgid "Corresponds to the @code{General_Category} Unicode property.  The value is a symbol whose name is a 2-letter abbreviation of the character's classification.  For unassigned codepoints, the value is @code{Cn}."
msgstr "Unicodeプロパティ@code{General_Category}に対応する。値は、その文字の分類をアルファベット2文字に略したものを名前としてもつようなシンボルである。未割り当てのコードポイントにたいする値は@code{Cn}。"

#. type: item
#: nonascii.texi.orig:452
#, no-wrap
msgid "canonical-combining-class"
msgstr "canonical-combining-class"

#. type: table
#: nonascii.texi.orig:456
msgid "Corresponds to the @code{Canonical_Combining_Class} Unicode property.  The value is an integer.  For unassigned codepoints, the value is zero."
msgstr "Unicodeプロパティ@code{Canonical_Combining_Class}に対応する。値は整数。未割り当てのコードポイントにたいする値は0。"

#. type: cindex
#: nonascii.texi.orig:457
#, no-wrap
msgid "bidirectional class of characters"
msgstr "bidirectional class of characters"

#. type: item
#: nonascii.texi.orig:458
#, no-wrap
msgid "bidi-class"
msgstr "bidi-class"

#. type: table
#: nonascii.texi.orig:467
msgid "Corresponds to the Unicode @code{Bidi_Class} property.  The value is a symbol whose name is the Unicode @dfn{directional type} of the character.  Emacs uses this property when it reorders bidirectional text for display (@pxref{Bidirectional Display}).  For unassigned codepoints, the value depends on the code blocks to which the codepoint belongs: most unassigned codepoints get the value of @code{L} (strong L), but some get values of @code{AL} (Arabic letter)  or @code{R} (strong R)."
msgstr "Unicodeプロパティ@code{Bidi_Class}に対応する。値は、その文字のUnicode@dfn{方向タイプ(directional type)}が名前であるようなシンボル。Emacsは表示のために双方向テキストを並び替える際に、このプロパティを使用する(@ref{Bidirectional Display}を参照)。未割り当てのコードポイントにたいする値は、そのコードポイントが属するコードブロックに依存する。未割り当てのコードポイントのほとんどは@code{L}(強い左方向)だが、@code{AL}( Arabic letter: アラビア文字)や@code{R}(強い右方向)を受け取るコースポイントもいくつかある。"

#. type: item
#: nonascii.texi.orig:468
#, no-wrap
msgid "decomposition"
msgstr "decomposition"

#. type: table
#: nonascii.texi.orig:478
msgid "Corresponds to the Unicode properties @code{Decomposition_Type} and @code{Decomposition_Value}.  The value is a list, whose first element may be a symbol representing a compatibility formatting tag, such as @code{small}@footnote{The Unicode specification writes these tag names inside @samp{<..>} brackets, but the tag names in Emacs do not include the brackets; e.g., Unicode specifies @samp{<small>} where Emacs uses @samp{small}.  }; the other elements are characters that give the compatibility decomposition sequence of this character.  For unassigned codepoints, the value is the character itself."
msgstr "Unicodeプロパティの@code{Decomposition_Type}と@code{Decomposition_Value}に対応する。値は、最初の要素が@code{small}のような互換性のあるフォーマットタグ(compatibility formatting tag)であるかもしれないリストである@footnote{Unicode仕様ではこれらのタグ名を@samp{<..>}カッコ内に記述しますが、Emacsでのタグ名にはカッコは含まれません。Unicodeでの@samp{<small>}指定は、Emacsでは@samp{small}となります。}。他の要素は、その文字の互換性のある分割シーケンス(compatibility decomposition sequence)を与える文字です。未割り当てのコードポイントにたいする値は、その文字自身。"

#. type: item
#: nonascii.texi.orig:479
#, no-wrap
msgid "decimal-digit-value"
msgstr "decimal-digit-value"

#. type: table
#: nonascii.texi.orig:484
msgid "Corresponds to the Unicode @code{Numeric_Value} property for characters whose @code{Numeric_Type} is @samp{Decimal}.  The value is an integer.  For unassigned codepoints, the value is @code{nil}, which means @acronym{NaN}, or ``not-a-number''."
msgstr "@code{Numeric_Type}が@samp{Decimal}であるような文字Unicodeプロパティ@code{Numeric_Value}に対応する。値は整数。未割り当てのコードポイントにたいする値は、@acronym{NaN(``not-a-number'': 数字ではない)}を意味する@code{nil}。"

#. type: item
#: nonascii.texi.orig:485
#, no-wrap
msgid "digit-value"
msgstr "digit-value"

#. type: table
#: nonascii.texi.orig:492
msgid "Corresponds to the Unicode @code{Numeric_Value} property for characters whose @code{Numeric_Type} is @samp{Digit}.  The value is an integer.  Examples of such characters include compatibility subscript and superscript digits, for which the value is the corresponding number.  For unassigned codepoints, the value is @code{nil}, which means @acronym{NaN}."
msgstr "@code{Numeric_Type}が@samp{Digit}であるような文字の、Unicodeプロパティ@code{Numeric_Value}に対応する。値は整数。このような文字には、互換性のある添字や上付き数字が含まれ、値は対応する数字である。未割り当てのコードポイントにたいする値は、@acronym{NaN}を意味する@code{nil}である。"

#. type: item
#: nonascii.texi.orig:493
#, no-wrap
msgid "numeric-value"
msgstr "numeric-value"

#. type: table
#: nonascii.texi.orig:503
msgid "Corresponds to the Unicode @code{Numeric_Value} property for characters whose @code{Numeric_Type} is @samp{Numeric}.  The value of this property is a number.  Examples of characters that have this property include fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.  For example, the value of this property for the character @code{U+2155} (@sc{vulgar fraction one fifth}) is @code{0.2}.  For unassigned codepoints, the value is @code{nil}, which means @acronym{NaN}."
msgstr "@code{Numeric_Type}が@samp{Numeric}であるような文字の、Unicodeプロパティ@code{Numeric_Value}に対応する。このプロパティの値は数字。このプロパティをもつ文字の例には分数、添字、上付き数字、ローマ数字、通貨分数(訳注: 原文は``currency numerators''でベンガル語の分数値用の歴史的な記号を指すと思われる)、丸数字が含まれる。たとえば、文字@code{U+2155}(@sc{vulgar fraction one fifth: (訳注)スラッシュで分子と分母を区切った表記による5分の1のこと})にたいするこのプロパティの値は@code{0.2}。未割り当てのコードポイントにたいする値は、@acronym{NaN}を意味する@code{nil}。"

#. type: cindex
#: nonascii.texi.orig:504
#, no-wrap
msgid "mirroring of characters"
msgstr "mirroring of characters"

#. type: item
#: nonascii.texi.orig:505
#, no-wrap
msgid "mirrored"
msgstr "mirrored"

#. type: table
#: nonascii.texi.orig:509
msgid "Corresponds to the Unicode @code{Bidi_Mirrored} property.  The value of this property is a symbol, either @code{Y} or @code{N}.  For unassigned codepoints, the value is @code{N}."
msgstr "Unicodeプロパティ@code{Bidi_Mirrored}に対応する。このプロパティの値は、@code{Y}または@code{N}いずれかのシンボル。未割り当てのコードポイントにたいする値は@code{N}。"

#. type: item
#: nonascii.texi.orig:510
#, no-wrap
msgid "mirroring"
msgstr "mirroring"

#. type: table
#: nonascii.texi.orig:522
msgid "Corresponds to the Unicode @code{Bidi_Mirroring_Glyph} property.  The value of this property is a character whose glyph represents the mirror image of the character's glyph, or @code{nil} if there's no defined mirroring glyph.  All the characters whose @code{mirrored} property is @code{N} have @code{nil} as their @code{mirroring} property; however, some characters whose @code{mirrored} property is @code{Y} also have @code{nil} for @code{mirroring}, because no appropriate characters exist with mirrored glyphs.  Emacs uses this property to display mirror images of characters when appropriate (@pxref{Bidirectional Display}).  For unassigned codepoints, the value is @code{nil}."
msgstr "Unicodeプロパティ@code{Bidi_Mirroring_Glyph}に対応する。このプロパティの値は、そのグリフ(glyph)がその文字のグリフの鏡像(mirror image)を表すような文字、定義済みの鏡像グリフがなければ@code{nil}である。@code{mirrored}プロパティが@code{N}であるようなすべての文字の@code{mirroring}プロパティは@code{nil}である。しかし@code{mirrored}プロパティが@code{Y}の文字でも、鏡像をもつ適切な文字がないという理由により、@code{mirroring}が@code{nil}の文字もある。Emacsは適切な際は、鏡像を表示するためにこのプロパティを使用する(@ref{Bidirectional Display}を参照)。未割り当てのコードポイントにたいする値は@code{nil}。"

#. type: item
#: nonascii.texi.orig:523
#, no-wrap
msgid "old-name"
msgstr "old-name"

#. type: table
#: nonascii.texi.orig:527
msgid "Corresponds to the Unicode @code{Unicode_1_Name} property.  The value is a string.  Unassigned codepoints, and characters that have no value for this property, the value is @code{nil}."
msgstr "Unicodeプロパティ@code{Unicode_1_Name}に対応する。値は文字列。未割り当てのコードポイント、およびこのプロパティにたいする値をもたない文字では、値は@code{nil}である。"

#. type: item
#: nonascii.texi.orig:528
#, no-wrap
msgid "iso-10646-comment"
msgstr "iso-10646-comment"

#. type: table
#: nonascii.texi.orig:531
msgid "Corresponds to the Unicode @code{ISO_Comment} property.  The value is a string.  For unassigned codepoints, the value is an empty string."
msgstr "Unicodeプロパティ@code{ISO_Comment}に対応する。値は文字列。未割り当てのコードポイントの値は空文字列。"

#. type: item
#: nonascii.texi.orig:532
#, no-wrap
msgid "uppercase"
msgstr "uppercase"

#. type: table
#: nonascii.texi.orig:536
msgid "Corresponds to the Unicode @code{Simple_Uppercase_Mapping} property.  The value of this property is a single character.  For unassigned codepoints, the value is @code{nil}, which means the character itself."
msgstr "Unicodeプロパティ@code{Simple_Uppercase_Mapping}に対応する。このプロパティの値は、単一の文字。未割り当てのコードポイントの値は@code{nil}で、これはその文字自身を意味する。"

#. type: item
#: nonascii.texi.orig:537
#, no-wrap
msgid "lowercase"
msgstr "lowercase"

#. type: table
#: nonascii.texi.orig:541
msgid "Corresponds to the Unicode @code{Simple_Lowercase_Mapping} property.  The value of this property is a single character.  For unassigned codepoints, the value is @code{nil}, which means the character itself."
msgstr "Unicodeプロパティ@code{Simple_Lowercase_Mapping}に対応する。このプロパティの値は、単一の文字。未割り当てのコードポイントの値は@code{nil}で、これはその文字自身を意味する。"

#. type: item
#: nonascii.texi.orig:542
#, no-wrap
msgid "titlecase"
msgstr "titlecase"

#. type: table
#: nonascii.texi.orig:548
msgid "Corresponds to the Unicode @code{Simple_Titlecase_Mapping} property.  @dfn{Title case} is a special form of a character used when the first character of a word needs to be capitalized.  The value of this property is a single character.  For unassigned codepoints, the value is @code{nil}, which means the character itself."
msgstr "Unicodeプロパティ@code{Simple_Titlecase_Mapping}に対応する。@dfn{タイトルケース(title case)}とは、単語の最初の文字を大文字にする必要がある際に使用される、文字の特別な形式のこと。このプロパティの値は、単一の文字。未割り当てのコードポイントにたいする値は@code{nil}で、これはその文字自身を意味する。"

#. type: defun
#: nonascii.texi.orig:550
#, no-wrap
msgid "get-char-code-property char propname"
msgstr "get-char-code-property char propname"

#. type: defun
#: nonascii.texi.orig:552
msgid "This function returns the value of @var{char}'s @var{propname} property."
msgstr "この関数は、@var{char}のプロパティ@var{propname}の値をリターンする。"

#. type: group
#: nonascii.texi.orig:557
#, no-wrap
msgid ""
"(get-char-code-property ?\\s 'general-category)\n"
"     @result{} Zs\n"
msgstr ""
"(get-char-code-property ?\\s 'general-category)\n"
"     @result{} Zs\n"

#. type: group
#: nonascii.texi.orig:561
#, no-wrap
msgid ""
"(get-char-code-property ?1 'general-category)\n"
"     @result{} Nd\n"
msgstr ""
"(get-char-code-property ?1 'general-category)\n"
"     @result{} Nd\n"

#. type: group
#: nonascii.texi.orig:566
#, no-wrap
msgid ""
";; subscript 4\n"
"(get-char-code-property ?\\u2084 'digit-value)\n"
"     @result{} 4\n"
msgstr ""
";; subscript 4\n"
"(get-char-code-property ?\\u2084 'digit-value)\n"
"     @result{} 4\n"

#. type: group
#: nonascii.texi.orig:571
#, no-wrap
msgid ""
";; one fifth\n"
"(get-char-code-property ?\\u2155 'numeric-value)\n"
"     @result{} 0.2\n"
msgstr ""
";; one fifth\n"
"(get-char-code-property ?\\u2155 'numeric-value)\n"
"     @result{} 0.2\n"

#. type: group
#: nonascii.texi.orig:576
#, no-wrap
msgid ""
";; Roman IV\n"
"(get-char-code-property ?\\u2163 'numeric-value)\n"
"     @result{} 4\n"
msgstr ""
";; Roman IV\n"
"(get-char-code-property ?\\u2163 'numeric-value)\n"
"     @result{} 4\n"

#. type: defun
#: nonascii.texi.orig:580
#, no-wrap
msgid "char-code-property-description prop value"
msgstr "char-code-property-description prop value"

#. type: defun
#: nonascii.texi.orig:583
msgid "This function returns the description string of property @var{prop}'s @var{value}, or @code{nil} if @var{value} has no description."
msgstr "この関数はプロパティ@var{prop}の@var{value}の説明文字列(description string)、@var{value}が説明をもたなければ@code{nil}をリターンする。"

#. type: group
#: nonascii.texi.orig:588
#, no-wrap
msgid ""
"(char-code-property-description 'general-category 'Zs)\n"
"     @result{} \"Separator, Space\"\n"
msgstr ""
"(char-code-property-description 'general-category 'Zs)\n"
"     @result{} \"Separator, Space\"\n"

#. type: group
#: nonascii.texi.orig:592
#, no-wrap
msgid ""
"(char-code-property-description 'general-category 'Nd)\n"
"     @result{} \"Number, Decimal Digit\"\n"
msgstr ""
"(char-code-property-description 'general-category 'Nd)\n"
"     @result{} \"Number, Decimal Digit\"\n"

#. type: group
#: nonascii.texi.orig:596
#, no-wrap
msgid ""
"(char-code-property-description 'numeric-value '1/5)\n"
"     @result{} nil\n"
msgstr ""
"(char-code-property-description 'numeric-value '1/5)\n"
"     @result{} nil\n"

#. type: defun
#: nonascii.texi.orig:600
#, no-wrap
msgid "put-char-code-property char propname value"
msgstr "put-char-code-property char propname value"

#. type: defun
#: nonascii.texi.orig:603
msgid "This function stores @var{value} as the value of the property @var{propname} for the character @var{char}."
msgstr "この関数は、文字@var{char}のプロパティ@var{propname}の値として、@var{value}を格納する。"

#. type: defvar
#: nonascii.texi.orig:605
#, no-wrap
msgid "unicode-category-table"
msgstr "unicode-category-table"

#. type: defvar
#: nonascii.texi.orig:609
msgid "The value of this variable is a char-table (@pxref{Char-Tables}) that specifies, for each character, its Unicode @code{General_Category} property as a symbol."
msgstr "この変数の値は、それぞれの文字にたいして、そのUnicodeプロパティ@code{General_Category}をシンボルとして指定する、文字テーブルである(@ref{Char-Tables}を参照)。"

#. type: defvar
#: nonascii.texi.orig:611
#, no-wrap
msgid "char-script-table"
msgstr "char-script-table"

#. type: cindex
#: nonascii.texi.orig:612
#, no-wrap
msgid "script symbols"
msgstr "script symbols"

#. type: defvar
#: nonascii.texi.orig:618
msgid "The value of this variable is a char-table that specifies, for each character, a symbol whose name is the script to which the character belongs, according to the Unicode Standard classification of the Unicode code space into script-specific blocks.  This char-table has a single extra slot whose value is the list of all script symbols."
msgstr "この変数の値は、それぞれの文字がシンボルを指定するような文字テーブルである。シンボルの名前は、Unicodeコードスペースからスクリプト固有ブロックへのUnicode標準分類にしたがった、その文字が属するスクリプトである。この文字テーブルは余分のスロットを１つもち、値はすべてのスクリプトシンボルのリストである。"

#. type: defvar
#: nonascii.texi.orig:620
#, no-wrap
msgid "char-width-table"
msgstr "char-width-table"

#. type: defvar
#: nonascii.texi.orig:623
msgid "The value of this variable is a char-table that specifies the width of each character in columns that it will occupy on the screen."
msgstr "この変数の値は、、それぞれの文字がスクリーン上で占めるであろう幅を列単位で指定する、文字テーブルである。"

#. type: defvar
#: nonascii.texi.orig:625
#, no-wrap
msgid "printable-chars"
msgstr "printable-chars"

#. type: defvar
#: nonascii.texi.orig:630
msgid "The value of this variable is a char-table that specifies, for each character, whether it is printable or not.  That is, if evaluating @code{(aref printable-chars char)} results in @code{t}, the character is printable, and if it results in @code{nil}, it is not."
msgstr "この変数の値は、それぞれの文字にたいして、それがプリント可能かどうかを指定する、文字テーブルである。すなわち、@code{(aref printable-chars char)}を評価した結果が@code{t}ならプリント可で、@code{nil}なら不可である。"

#. type: cindex
#: nonascii.texi.orig:634
#, no-wrap
msgid "character sets"
msgstr "character sets"

#. type: cindex
#: nonascii.texi.orig:636
#, no-wrap
msgid "charset"
msgstr "charset"

#. type: cindex
#: nonascii.texi.orig:637
#, no-wrap
msgid "coded character set"
msgstr "coded character set"

#. type: Plain text
#: nonascii.texi.orig:648
msgid "An Emacs @dfn{character set}, or @dfn{charset}, is a set of characters in which each character is assigned a numeric code point.  (The Unicode Standard calls this a @dfn{coded character set}.)  Each Emacs charset has a name which is a symbol.  A single character can belong to any number of different character sets, but it will generally have a different code point in each charset.  Examples of character sets include @code{ascii}, @code{iso-8859-1}, @code{greek-iso8859-7}, and @code{windows-1255}.  The code point assigned to a character in a charset is usually different from its code point used in Emacs buffers and strings."
msgstr "Emacsの@dfn{文字セット(character set、もしくはcharset)}とは、それぞれの文字が数字のコードポイントに割り当てられれた、文字セットのことです(Unicode標準ではこれを@dfn{符号化文字集合(coded character set)}と呼ぶ)。Emacsの各文字セットは、シンボルであるような名前をもちます。1つの文字が、任意の数の異なる文字セットに属することができますが、各文字セット内で異なるコードポイントをもつのが一般的でしょう。文字セットの例には@code{ascii}、@code{iso-8859-1}、@code{greek-iso8859-7}、@code{windows-1255}が含まれます。文字セット内で文字に割り当てられるコードポイントは、Emacs内のバッファーや文字列内で使用されるコードポイントとは、通常異なります。"

#. type: cindex
#: nonascii.texi.orig:649
#, no-wrap
msgid "@code{emacs}, a charset"
msgstr "@code{emacs}, a charset"

#. type: cindex
#: nonascii.texi.orig:650
#, no-wrap
msgid "@code{unicode}, a charset"
msgstr "@code{unicode}, a charset"

#. type: cindex
#: nonascii.texi.orig:651
#, no-wrap
msgid "@code{eight-bit}, a charset"
msgstr "@code{eight-bit}, a charset"

#. type: Plain text
#: nonascii.texi.orig:658
msgid "Emacs defines several special character sets.  The character set @code{unicode} includes all the characters whose Emacs code points are in the range @code{0..#x10FFFF}.  The character set @code{emacs} includes all @acronym{ASCII} and non-@acronym{ASCII} characters.  Finally, the @code{eight-bit} charset includes the 8-bit raw bytes; Emacs uses it to represent raw bytes encountered in text."
msgstr "Emacsは、特別な文字セットをいくつか定義しています。文字セット@code{unicode}は、Emacsコードポイントが@code{0..#x10FFFF}の範囲の、すべての文字セットを含みます。文字セット@code{emacs}は、すべての@acronym{ASCII}、および非@acronym{ASCII}文字を含みます。最後に@code{eight-bit}文字セットは、8ビットrawバイトを含みます。テキスト内でrawバイトを見つけたときに、Emacsはこれを使用します。"

#. type: defun
#: nonascii.texi.orig:659
#, no-wrap
msgid "charsetp object"
msgstr "charsetp object"

#. type: defun
#: nonascii.texi.orig:662
msgid "Returns @code{t} if @var{object} is a symbol that names a character set, @code{nil} otherwise."
msgstr "@var{object}は文字セットを命名するシンボルなら@code{t}、それ以外は@code{nil}をリターンする。"

#. type: defvar
#: nonascii.texi.orig:664
#, no-wrap
msgid "charset-list"
msgstr "charset-list"

#. type: defvar
#: nonascii.texi.orig:666
msgid "The value is a list of all defined character set names."
msgstr "値は、すべての定義済み文字セットの名前のリストである。"

#. type: defun
#: nonascii.texi.orig:668
#, no-wrap
msgid "charset-priority-list &optional highestp"
msgstr "charset-priority-list &optional highestp"

#. type: defun
#: nonascii.texi.orig:672
msgid "This function returns a list of all defined character sets ordered by their priority.  If @var{highestp} is non-@code{nil}, the function returns a single character set of the highest priority."
msgstr "この関数は、すべての定義済み文字セットの優先順にソートされたリストをリターンする。@var{highestp}が非@code{nil}なら、この関数はもっとも優先度の高い文字セット1つをリターンする。"

#. type: defun
#: nonascii.texi.orig:674
#, no-wrap
msgid "set-charset-priority &rest charsets"
msgstr "set-charset-priority &rest charsets"

#. type: defun
#: nonascii.texi.orig:676
msgid "This function makes @var{charsets} the highest priority character sets."
msgstr "この関数は、@var{charsets}をもっとも高い優先度の文字セットにする。"

#. type: defun
#: nonascii.texi.orig:678
#, no-wrap
msgid "char-charset character &optional restriction"
msgstr "char-charset character &optional restriction"

#. type: defun
#: nonascii.texi.orig:682
msgid "This function returns the name of the character set of highest priority that @var{character} belongs to.  @acronym{ASCII} characters are an exception: for them, this function always returns @code{ascii}."
msgstr "この関数は、@var{character}が属する文字セットで、もっとも優先度の高い文字セットの名前をリターンする。ただし@acronym{ASCII}文字は例外であり、この関数は常に@code{ascii}をリターンする。"

#. type: defun
#: nonascii.texi.orig:687
msgid "If @var{restriction} is non-@code{nil}, it should be a list of charsets to search.  Alternatively, it can be a coding system, in which case the returned charset must be supported by that coding system (@pxref{Coding Systems})."
msgstr "@var{restriction}が非@code{nil}なら、それは検索する文字セットのリストであること。かわりにコーディングシステムも指定でき、その場合はそのコーディングシステムによりサポートされている必要がある(@ref{Coding Systems}を参照)。"

#. type: defun
#: nonascii.texi.orig:690
#, no-wrap
msgid "charset-plist charset"
msgstr "charset-plist charset"

#. type: defun
#: nonascii.texi.orig:696
msgid "This function returns the property list of the character set @var{charset}.  Although @var{charset} is a symbol, this is not the same as the property list of that symbol.  Charset properties include important information about the charset, such as its documentation string, short name, etc."
msgstr "この関数は、文字セット@var{charset}のプロパティをリターンする。たとえ@var{charset}がシンボルだったとしても、これはそのシンボルのプロパティリストと同じではない。文字セットプロパティにはドキュメント文字列、短い名前等、その文字セットに関する重要な情報が含まれる。"

#. type: defun
#: nonascii.texi.orig:698
#, no-wrap
msgid "put-charset-property charset propname value"
msgstr "put-charset-property charset propname value"

#. type: defun
#: nonascii.texi.orig:701
msgid "This function sets the @var{propname} property of @var{charset} to the given @var{value}."
msgstr "この関数は、@var{charset}のプロパティ@var{propname}に、与えられた@var{value}をセットする。"

#. type: defun
#: nonascii.texi.orig:703
#, no-wrap
msgid "get-charset-property charset propname"
msgstr "get-charset-property charset propname"

#. type: defun
#: nonascii.texi.orig:706
msgid "This function returns the value of @var{charset}s property @var{propname}."
msgstr "この関数は、@var{charset}のプロパティ@var{propname}の値をリターンする。"

#. type: deffn
#: nonascii.texi.orig:708
#, no-wrap
msgid "Command list-charset-chars charset"
msgstr "Command list-charset-chars charset"

#. type: deffn
#: nonascii.texi.orig:711
msgid "This command displays a list of characters in the character set @var{charset}."
msgstr "このコマンドは、文字セット@var{charset}内の文字のリストを表示する。"

#. type: Plain text
#: nonascii.texi.orig:716
msgid "Emacs can convert between its internal representation of a character and the character's codepoint in a specific charset.  The following two functions support these conversions."
msgstr "Emacsは文字の内部的な表現と、その文字の特定の文字セット内でのコードポイントを相互に変換することができます。以下は、これらをサポートするための関数です。"

#. type: defun
#: nonascii.texi.orig:720
#, no-wrap
msgid "decode-char charset code-point"
msgstr "decode-char charset code-point"

#. type: defun
#: nonascii.texi.orig:729
msgid "This function decodes a character that is assigned a @var{code-point} in @var{charset}, to the corresponding Emacs character, and returns it.  If @var{charset} doesn't contain a character of that code point, the value is @code{nil}.  If @var{code-point} doesn't fit in a Lisp integer (@pxref{Integer Basics, most-positive-fixnum}), it can be specified as a cons cell @code{(@var{high} . @var{low})}, where @var{low} are the lower 16 bits of the value and @var{high} are the high 16 bits."
msgstr "この関数は、@var{charset}内で@var{code-point}に割り当てられた文字を、Emacsの対応する文字にデコードして、それをリターンする。そのコードポイントの文字が@var{charset}に含まれなければ、値は@code{nil}である。@var{code-point}がLisp整数(@ref{Integer Basics, most-positive-fixnum}を参照)に収まらない場合は、コンスセル@code{(@var{high} . @var{low})}として指定できるかもしれない。ここで@var{low}はその値の下位来る16ビット、@var{high}は上位16ビットである。"

#. type: defun
#: nonascii.texi.orig:731
#, no-wrap
msgid "encode-char char charset"
msgstr "encode-char char charset"

#. type: defun
#: nonascii.texi.orig:738
msgid "This function returns the code point assigned to the character @var{char} in @var{charset}.  If the result does not fit in a Lisp integer, it is returned as a cons cell @code{(@var{high} . @var{low})} that fits the second argument of @code{decode-char} above.  If @var{charset} doesn't have a codepoint for @var{char}, the value is @code{nil}."
msgstr "この関数は、@var{charset}内で文字@var{char}に割り当てられた、コードポイントをリターンする。結果がLisp整数に収まらない場合は、上述の@code{decode-char}の2つ目の引数のように、コンスセル@code{(@var{high} . @var{low})}としてリターンされる。@var{charset}が@var{char}にたいするコードポイントをもたなければ、値は@code{nil}である。"

#. type: Plain text
#: nonascii.texi.orig:742
msgid "The following function comes in handy for applying a certain function to all or part of the characters in a charset:"
msgstr "以下の関数は、文字セット内の文字の一部、全くすべてにたいして、特定の関数を適用するのに便利です。"

#. type: defun
#: nonascii.texi.orig:743
#, no-wrap
msgid "map-charset-chars function charset &optional arg from-code to-code"
msgstr "map-charset-chars function charset &optional arg from-code to-code"

#. type: defun
#: nonascii.texi.orig:749
msgid "Call @var{function} for characters in @var{charset}.  @var{function} is called with two arguments.  The first one is a cons cell @code{(@var{from} .  @var{to})}, where @var{from} and @var{to} indicate a range of characters contained in charset.  The second argument passed to @var{function} is @var{arg}."
msgstr "@var{charset}内の文字にたいして@var{function}を呼び出す。@var{function}は2つの引数で呼び出される。1つ目はコンスセル@code{(@var{from} .  @var{to})}で、@var{from}と@var{to}は文字セット内に含まれる文字の範囲である。@var{arg}は、2つ目の引数として@var{function}に渡される。"

#. type: defun
#: nonascii.texi.orig:756
msgid "By default, the range of codepoints passed to @var{function} includes all the characters in @var{charset}, but optional arguments @var{from-code} and @var{to-code} limit that to the range of characters between these two codepoints of @var{charset}.  If either of them is @code{nil}, it defaults to the first or last codepoint of @var{charset}, respectively."
msgstr "デフォルトでは、@var{function}に渡されるコードポイントの範囲には@var{charset}内のすべての文字が含まれるが、オプション引数@var{from-code}および@var{to-code}により、それは@var{charset}の2つのコードポイント間にある文字範囲に制限される。@var{from-code}または@var{to-code}のいずれかが@code{nil}の場合のデフォルトは、@var{charset}のコードポイントの最初または最後である。"

#. type: section
#: nonascii.texi.orig:759
#, no-wrap
msgid "Scanning for Character Sets"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:760
#, no-wrap
msgid "scanning for character sets"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:761
#, no-wrap
msgid "character set, searching"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:768
msgid "Sometimes it is useful to find out which character set a particular character belongs to.  One use for this is in determining which coding systems (@pxref{Coding Systems}) are capable of representing all of the text in question; another is to determine the font(s) for displaying that text."
msgstr ""

#. type: defun
#: nonascii.texi.orig:769
#, no-wrap
msgid "charset-after &optional pos"
msgstr ""

#. type: defun
#: nonascii.texi.orig:774
msgid "This function returns the charset of highest priority containing the character at position @var{pos} in the current buffer.  If @var{pos} is omitted or @code{nil}, it defaults to the current value of point.  If @var{pos} is out of range, the value is @code{nil}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:776
#, no-wrap
msgid "find-charset-region beg end &optional translation"
msgstr ""

#. type: defun
#: nonascii.texi.orig:780
msgid "This function returns a list of the character sets of highest priority that contain characters in the current buffer between positions @var{beg} and @var{end}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:786
msgid "The optional argument @var{translation} specifies a translation table to use for scanning the text (@pxref{Translation of Characters}).  If it is non-@code{nil}, then each character in the region is translated through this table, and the value returned describes the translated characters instead of the characters actually in the buffer."
msgstr ""

#. type: defun
#: nonascii.texi.orig:788
#, no-wrap
msgid "find-charset-string string &optional translation"
msgstr ""

#. type: defun
#: nonascii.texi.orig:793
msgid "This function returns a list of character sets of highest priority that contain characters in @var{string}.  It is just like @code{find-charset-region}, except that it applies to the contents of @var{string} instead of part of the current buffer."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:797
#, no-wrap
msgid "character translation tables"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:798
#, no-wrap
msgid "translation tables"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:806
msgid "A @dfn{translation table} is a char-table (@pxref{Char-Tables}) that specifies a mapping of characters into characters.  These tables are used in encoding and decoding, and for other purposes.  Some coding systems specify their own particular translation tables; there are also default translation tables which apply to all other coding systems."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:812
msgid "A translation table has two extra slots.  The first is either @code{nil} or a translation table that performs the reverse translation; the second is the maximum number of characters to look up for translating sequences of characters (see the description of @code{make-translation-table-from-alist} below)."
msgstr ""

#. type: defun
#: nonascii.texi.orig:813
#, no-wrap
msgid "make-translation-table &rest translations"
msgstr ""

#. type: defun
#: nonascii.texi.orig:818
msgid "This function returns a translation table based on the argument @var{translations}.  Each element of @var{translations} should be a list of elements of the form @code{(@var{from} . @var{to})}; this says to translate the character @var{from} into @var{to}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:823
msgid "The arguments and the forms in each argument are processed in order, and if a previous form already translates @var{to} to some other character, say @var{to-alt}, @var{from} is also translated to @var{to-alt}."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:835
msgid "During decoding, the translation table's translations are applied to the characters that result from ordinary decoding.  If a coding system has the property @code{:decode-translation-table}, that specifies the translation table to use, or a list of translation tables to apply in sequence.  (This is a property of the coding system, as returned by @code{coding-system-get}, not a property of the symbol that is the coding system's name.  @xref{Coding System Basics,, Basic Concepts of Coding Systems}.)  Finally, if @code{standard-translation-table-for-decode} is non-@code{nil}, the resulting characters are translated by that table."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:844
msgid "During encoding, the translation table's translations are applied to the characters in the buffer, and the result of translation is actually encoded.  If a coding system has property @code{:encode-translation-table}, that specifies the translation table to use, or a list of translation tables to apply in sequence.  In addition, if the variable @code{standard-translation-table-for-encode} is non-@code{nil}, it specifies the translation table to use for translating the result."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:845
#, no-wrap
msgid "standard-translation-table-for-decode"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:849
msgid "This is the default translation table for decoding.  If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-@code{nil}, is applied after them."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:851
#, no-wrap
msgid "standard-translation-table-for-encode"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:855
msgid "This is the default translation table for encoding.  If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-@code{nil}, is applied after them."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:859
#, no-wrap
msgid "translation-table-for-input"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:864
msgid "Self-inserting characters are translated through this translation table before they are inserted.  Search commands also translate their input through this table, so they can compare more reliably with what's in the buffer."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:866
msgid "This variable automatically becomes buffer-local when set."
msgstr ""

#. type: defun
#: nonascii.texi.orig:868
#, no-wrap
msgid "make-translation-table-from-vector vec"
msgstr ""

#. type: defun
#: nonascii.texi.orig:874
msgid "This function returns a translation table made from @var{vec} that is an array of 256 elements to map bytes (values 0 through #xFF) to characters.  Elements may be @code{nil} for untranslated bytes.  The returned table has a translation table for reverse mapping in the first extra slot, and the value @code{1} in the second extra slot."
msgstr ""

#. type: defun
#: nonascii.texi.orig:881
msgid "This function provides an easy way to make a private coding system that maps each byte to a specific character.  You can specify the returned table and the reverse translation table using the properties @code{:decode-translation-table} and @code{:encode-translation-table} respectively in the @var{props} argument to @code{define-coding-system}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:883
#, no-wrap
msgid "make-translation-table-from-alist alist"
msgstr ""

#. type: defun
#: nonascii.texi.orig:895
msgid "This function is similar to @code{make-translation-table} but returns a complex translation table rather than a simple one-to-one mapping.  Each element of @var{alist} is of the form @code{(@var{from} . @var{to})}, where @var{from} and @var{to} are either characters or vectors specifying a sequence of characters.  If @var{from} is a character, that character is translated to @var{to} (i.e., to a character or a character sequence).  If @var{from} is a vector of characters, that sequence is translated to @var{to}.  The returned table has a translation table for reverse mapping in the first extra slot, and the maximum length of all the @var{from} character sequences in the second extra slot."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:900
#, no-wrap
msgid "coding system"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:905
msgid "When Emacs reads or writes a file, and when Emacs sends text to a subprocess or receives text from a subprocess, it normally performs character code conversion and end-of-line conversion as specified by a particular @dfn{coding system}."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:908
msgid "How to define a coding system is an arcane matter, and is not documented here."
msgstr ""

#. type: node
#: nonascii.texi.orig:919 nonascii.texi.orig:921
#, no-wrap
msgid "Coding System Basics"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Basic concepts."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:919 nonascii.texi.orig:1031 nonascii.texi.orig:1032
#, no-wrap
msgid "Encoding and I/O"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "How file I/O functions handle coding systems."
msgstr ""

#. type: node
#: nonascii.texi.orig:919 nonascii.texi.orig:1122
#, no-wrap
msgid "Lisp and Coding Systems"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Functions to operate on coding system names."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:919 nonascii.texi.orig:1312 nonascii.texi.orig:1313
#, no-wrap
msgid "User-Chosen Coding Systems"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Asking the user to choose a coding system."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:919 nonascii.texi.orig:1395 nonascii.texi.orig:1396
#, no-wrap
msgid "Default Coding Systems"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Controlling the default choices."
msgstr ""

#. type: node
#: nonascii.texi.orig:919 nonascii.texi.orig:1597
#, no-wrap
msgid "Specifying Coding Systems"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Requesting a particular coding system for a single file operation."
msgstr ""

#. type: node
#: nonascii.texi.orig:919 nonascii.texi.orig:1680
#, no-wrap
msgid "Explicit Encoding"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Encoding or decoding text without doing I/O."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:919 nonascii.texi.orig:1810 nonascii.texi.orig:1811
#, no-wrap
msgid "Terminal I/O Encoding"
msgstr ""

#. type: menuentry
#: nonascii.texi.orig:919
msgid "Use of encoding for terminal I/O."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:922
#, no-wrap
msgid "Basic Concepts of Coding Systems"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:924
#, no-wrap
msgid "character code conversion"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:934
msgid "@dfn{Character code conversion} involves conversion between the internal representation of characters used inside Emacs and some other encoding.  Emacs supports many different encodings, in that it can convert to and from them.  For example, it can convert text to or from encodings such as Latin 1, Latin 2, Latin 3, Latin 4, Latin 5, and several variants of ISO 2022.  In some cases, Emacs supports several alternative encodings for the same characters; for example, there are three coding systems for the Cyrillic (Russian) alphabet: ISO, Alternativnyj, and KOI8."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:939
msgid "Every coding system specifies a particular set of character code conversions, but the coding system @code{undecided} is special: it leaves the choice unspecified, to be chosen heuristically for each file, based on the file's data."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:946
msgid "In general, a coding system doesn't guarantee roundtrip identity: decoding a byte sequence using coding system, then encoding the resulting text in the same coding system, can produce a different byte sequence.  But some coding systems do guarantee that the byte sequence will be the same as what you originally decoded.  Here are a few examples:"
msgstr ""

#. type: quotation
#: nonascii.texi.orig:949
msgid "iso-8859-1, utf-8, big5, shift_jis, euc-jp"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:957
msgid "Encoding buffer text and then decoding the result can also fail to reproduce the original text.  For instance, if you encode a character with a coding system which does not support that character, the result is unpredictable, and thus decoding it using the same coding system may produce a different text.  Currently, Emacs can't report errors that result from encoding unsupported characters."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:958
#, no-wrap
msgid "EOL conversion"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:959
#, no-wrap
msgid "end-of-line conversion"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:960
#, no-wrap
msgid "line end conversion"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:969
msgid "@dfn{End of line conversion} handles three different conventions used on various systems for representing end of line in files.  The Unix convention, used on GNU and Unix systems, is to use the linefeed character (also called newline).  The DOS convention, used on MS-Windows and MS-DOS systems, is to use a carriage-return and a linefeed at the end of a line.  The Mac convention is to use just carriage-return.  (This was the convention used on the Macintosh system prior to OS X.)"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:970
#, no-wrap
msgid "base coding system"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:971
#, no-wrap
msgid "variant coding system"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:978
msgid "@dfn{Base coding systems} such as @code{latin-1} leave the end-of-line conversion unspecified, to be chosen based on the data.  @dfn{Variant coding systems} such as @code{latin-1-unix}, @code{latin-1-dos} and @code{latin-1-mac} specify the end-of-line conversion explicitly as well.  Most base coding systems have three corresponding variants whose names are formed by adding @samp{-unix}, @samp{-dos} and @samp{-mac}."
msgstr ""

#. type: vindex
#: nonascii.texi.orig:979
#, no-wrap
msgid "raw-text@r{ coding system}"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:990
msgid "The coding system @code{raw-text} is special in that it prevents character code conversion, and causes the buffer visited with this coding system to be a unibyte buffer.  For historical reasons, you can save both unibyte and multibyte text with this coding system.  When you use @code{raw-text} to encode multibyte text, it does perform one character code conversion: it converts eight-bit characters to their single-byte external representation.  @code{raw-text} does not specify the end-of-line conversion, allowing that to be determined as usual by the data, and has the usual three variants which specify the end-of-line conversion."
msgstr ""

#. type: vindex
#: nonascii.texi.orig:991
#, no-wrap
msgid "no-conversion@r{ coding system}"
msgstr ""

#. type: vindex
#: nonascii.texi.orig:992
#, no-wrap
msgid "binary@r{ coding system}"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:996
msgid "@code{no-conversion} (and its alias @code{binary}) is equivalent to @code{raw-text-unix}: it specifies no conversion of either character codes or end-of-line."
msgstr ""

#. type: vindex
#: nonascii.texi.orig:997
#, no-wrap
msgid "emacs-internal@r{ coding system}"
msgstr ""

#. type: vindex
#: nonascii.texi.orig:998
#, no-wrap
msgid "utf-8-emacs@r{ coding system}"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1005
msgid "The coding system @code{utf-8-emacs} specifies that the data is represented in the internal Emacs encoding (@pxref{Text Representations}).  This is like @code{raw-text} in that no code conversion happens, but different in that the result is multibyte data.  The name @code{emacs-internal} is an alias for @code{utf-8-emacs}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1006
#, no-wrap
msgid "coding-system-get coding-system property"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1012
msgid "This function returns the specified property of the coding system @var{coding-system}.  Most coding system properties exist for internal purposes, but one that you might find useful is @code{:mime-charset}.  That property's value is the name used in MIME for the character coding which this coding system can read and write.  Examples:"
msgstr ""

#. type: example
#: nonascii.texi.orig:1020
#, no-wrap
msgid ""
"(coding-system-get 'iso-latin-1 :mime-charset)\n"
"     @result{} iso-8859-1\n"
"(coding-system-get 'iso-2022-cn :mime-charset)\n"
"     @result{} iso-2022-cn\n"
"(coding-system-get 'cyrillic-koi8 :mime-charset)\n"
"     @result{} koi8-r\n"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1024
msgid "The value of the @code{:mime-charset} property is also defined as an alias for the coding system."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1026
#, no-wrap
msgid "alias, for coding systems"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1027
#, no-wrap
msgid "coding-system-aliases coding-system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1029
msgid "This function returns the list of aliases of @var{coding-system}."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1038
msgid "The principal purpose of coding systems is for use in reading and writing files.  The function @code{insert-file-contents} uses a coding system to decode the file data, and @code{write-region} uses one to encode the buffer contents."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1047
msgid "You can specify the coding system to use either explicitly (@pxref{Specifying Coding Systems}), or implicitly using a default mechanism (@pxref{Default Coding Systems}).  But these methods may not completely specify what to do.  For example, they may choose a coding system such as @code{undefined} which leaves the character code conversion to be determined from the data.  In these cases, the I/O operation finishes the job of choosing a coding system.  Very often you will want to find out afterwards which coding system was chosen."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1048
#, no-wrap
msgid "buffer-file-coding-system"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1058
msgid "This buffer-local variable records the coding system used for saving the buffer and for writing part of the buffer with @code{write-region}.  If the text to be written cannot be safely encoded using the coding system specified by this variable, these operations select an alternative encoding by calling the function @code{select-safe-coding-system} (@pxref{User-Chosen Coding Systems}).  If selecting a different encoding requires to ask the user to specify a coding system, @code{buffer-file-coding-system} is updated to the newly selected coding system."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1061
msgid "@code{buffer-file-coding-system} does @emph{not} affect sending text to a subprocess."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1063
#, no-wrap
msgid "save-buffer-coding-system"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1067
msgid "This variable specifies the coding system for saving the buffer (by overriding @code{buffer-file-coding-system}).  Note that it is not used for @code{write-region}."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1076
msgid "When a command to save the buffer starts out to use @code{buffer-file-coding-system} (or @code{save-buffer-coding-system}), and that coding system cannot handle the actual text in the buffer, the command asks the user to choose another coding system (by calling @code{select-safe-coding-system}).  After that happens, the command also updates @code{buffer-file-coding-system} to represent the coding system that the user specified."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1078
#, no-wrap
msgid "last-coding-system-used"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1082
msgid "I/O operations for files and subprocesses set this variable to the coding system name that was used.  The explicit encoding and decoding functions (@pxref{Explicit Encoding}) set it too."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1087
msgid "@strong{Warning:} Since receiving subprocess output sets this variable, it can change whenever Emacs waits; therefore, you should copy the value shortly after the function call that stores the value you are interested in."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1091
msgid "The variable @code{selection-coding-system} specifies how to encode selections for the window system.  @xref{Window System Selections}."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1092
#, no-wrap
msgid "file-name-coding-system"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1101
msgid "The variable @code{file-name-coding-system} specifies the coding system to use for encoding file names.  Emacs encodes file names using that coding system for all file operations.  If @code{file-name-coding-system} is @code{nil}, Emacs uses a default coding system determined by the selected language environment.  In the default language environment, any non-@acronym{ASCII} characters in file names are not encoded specially; they appear in the file system using the internal Emacs representation."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1111
msgid "@strong{Warning:} if you change @code{file-name-coding-system} (or the language environment) in the middle of an Emacs session, problems can result if you have already visited files whose names were encoded using the earlier coding system and are handled differently under the new coding system.  If you try to save one of these buffers under the visited file name, saving may use the wrong file name, or it may get an error.  If such a problem happens, use @kbd{C-x C-w} to specify a new file name for that buffer."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1112
#, no-wrap
msgid "file-name encoding, MS-Windows"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1121
msgid "On Windows 2000 and later, Emacs by default uses Unicode APIs to pass file names to the OS, so the value of @code{file-name-coding-system} is largely ignored.  Lisp applications that need to encode or decode file names on the Lisp level should use @code{utf-8} coding-system when @code{system-type} is @code{windows-nt}; the conversion of UTF-8 encoded file names to the encoding appropriate for communicating with the OS is performed internally by Emacs."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:1123
#, no-wrap
msgid "Coding Systems in Lisp"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1126
msgid "Here are the Lisp facilities for working with coding systems:"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1127
#, no-wrap
msgid "list all coding systems"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1128
#, no-wrap
msgid "coding-system-list &optional base-only"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1133
msgid "This function returns a list of all coding system names (symbols).  If @var{base-only} is non-@code{nil}, the value includes only the base coding systems.  Otherwise, it includes alias and variant coding systems as well."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1135
#, no-wrap
msgid "coding-system-p object"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1138
msgid "This function returns @code{t} if @var{object} is a coding system name or @code{nil}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1140
#, no-wrap
msgid "validity of coding system"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1141
#, no-wrap
msgid "coding system, validity check"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1142
#, no-wrap
msgid "check-coding-system coding-system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1148
msgid "This function checks the validity of @var{coding-system}.  If that is valid, it returns @var{coding-system}.  If @var{coding-system} is @code{nil}, the function return @code{nil}.  For any other values, it signals an error whose @code{error-symbol} is @code{coding-system-error} (@pxref{Signaling Errors, signal})."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1150
#, no-wrap
msgid "eol type of coding system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1151
#, no-wrap
msgid "coding-system-eol-type coding-system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1159
msgid "This function returns the type of end-of-line (a.k.a.@: @dfn{eol})  conversion used by @var{coding-system}.  If @var{coding-system} specifies a certain eol conversion, the return value is an integer 0, 1, or 2, standing for @code{unix}, @code{dos}, and @code{mac}, respectively.  If @var{coding-system} doesn't specify eol conversion explicitly, the return value is a vector of coding systems, each one with one of the possible eol conversion types, like this:"
msgstr ""

#. type: lisp
#: nonascii.texi.orig:1163
#, no-wrap
msgid ""
"(coding-system-eol-type 'latin-1)\n"
"     @result{} [latin-1-unix latin-1-dos latin-1-mac]\n"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1175
msgid "If this function returns a vector, Emacs will decide, as part of the text encoding or decoding process, what eol conversion to use.  For decoding, the end-of-line format of the text is auto-detected, and the eol conversion is set to match it (e.g., DOS-style CRLF format will imply @code{dos} eol conversion).  For encoding, the eol conversion is taken from the appropriate default coding system (e.g., default value of @code{buffer-file-coding-system} for @code{buffer-file-coding-system}), or from the default eol conversion appropriate for the underlying platform."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1177
#, no-wrap
msgid "eol conversion of coding system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1178
#, no-wrap
msgid "coding-system-change-eol-conversion coding-system eol-type"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1184
msgid "This function returns a coding system which is like @var{coding-system} except for its eol conversion, which is specified by @code{eol-type}.  @var{eol-type} should be @code{unix}, @code{dos}, @code{mac}, or @code{nil}.  If it is @code{nil}, the returned coding system determines the end-of-line conversion from the data."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1187
msgid "@var{eol-type} may also be 0, 1 or 2, standing for @code{unix}, @code{dos} and @code{mac}, respectively."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1189
#, no-wrap
msgid "text conversion of coding system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1190
#, no-wrap
msgid "coding-system-change-text-conversion eol-coding text-coding"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1195
msgid "This function returns a coding system which uses the end-of-line conversion of @var{eol-coding}, and the text conversion of @var{text-coding}.  If @var{text-coding} is @code{nil}, it returns @code{undecided}, or one of its variants according to @var{eol-coding}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1197
#, no-wrap
msgid "safely encode region"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1198
#, no-wrap
msgid "coding systems for encoding region"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1199
#, no-wrap
msgid "find-coding-systems-region from to"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1204
msgid "This function returns a list of coding systems that could be used to encode a text between @var{from} and @var{to}.  All coding systems in the list can safely encode any multibyte characters in that portion of the text."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1207
msgid "If the text contains no multibyte characters, the function returns the list @code{(undecided)}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1209
#, no-wrap
msgid "safely encode a string"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1210
#, no-wrap
msgid "coding systems for encoding a string"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1211
#, no-wrap
msgid "find-coding-systems-string string"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1217
msgid "This function returns a list of coding systems that could be used to encode the text of @var{string}.  All coding systems in the list can safely encode any multibyte characters in @var{string}.  If the text contains no multibyte characters, this returns the list @code{(undecided)}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1219
#, no-wrap
msgid "charset, coding systems to encode"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1220
#, no-wrap
msgid "safely encode characters in a charset"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1221
#, no-wrap
msgid "find-coding-systems-for-charsets charsets"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1224
msgid "This function returns a list of coding systems that could be used to encode all the character sets in the list @var{charsets}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1226
#, no-wrap
msgid "check-coding-systems-region start end coding-system-list"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1236
msgid "This function checks whether coding systems in the list @code{coding-system-list} can encode all the characters in the region between @var{start} and @var{end}.  If all of the coding systems in the list can encode the specified text, the function returns @code{nil}.  If some coding systems cannot encode some of the characters, the value is an alist, each element of which has the form @code{(@var{coding-system1} @var{pos1} @var{pos2} @dots{})}, meaning that @var{coding-system1} cannot encode characters at buffer positions @var{pos1}, @var{pos2}, @enddots{}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1240
msgid "@var{start} may be a string, in which case @var{end} is ignored and the returned value references string indices instead of buffer positions."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1242
#, no-wrap
msgid "detect-coding-region start end &optional highest"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1247
msgid "This function chooses a plausible coding system for decoding the text from @var{start} to @var{end}.  This text should be a byte sequence, i.e., unibyte text or multibyte text with only @acronym{ASCII} and eight-bit characters (@pxref{Explicit Encoding})."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1253
msgid "Normally this function returns a list of coding systems that could handle decoding the text that was scanned.  They are listed in order of decreasing priority.  But if @var{highest} is non-@code{nil}, then the return value is just one coding system, the one that is highest in priority."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1258
msgid "If the region contains only @acronym{ASCII} characters except for such ISO-2022 control characters ISO-2022 as @code{ESC}, the value is @code{undecided} or @code{(undecided)}, or a variant specifying end-of-line conversion, if that can be deduced from the text."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1261
msgid "If the region contains null bytes, the value is @code{no-conversion}, even if the region contains text encoded in some coding system."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1263
#, no-wrap
msgid "detect-coding-string string &optional highest"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1266
msgid "This function is like @code{detect-coding-region} except that it operates on the contents of @var{string} instead of bytes in the buffer."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1268
#, no-wrap
msgid "null bytes, and decoding text"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1269
#, no-wrap
msgid "inhibit-null-byte-detection"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1274
msgid "If this variable has a non-@code{nil} value, null bytes are ignored when detecting the encoding of a region or a string.  This allows to correctly detect the encoding of text that contains null bytes, such as Info files with Index nodes."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1276
#, no-wrap
msgid "inhibit-iso-escape-detection"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1283
msgid "If this variable has a non-@code{nil} value, ISO-2022 escape sequences are ignored when detecting the encoding of a region or a string.  The result is that no text is ever detected as encoded in some ISO-2022 encoding, and all escape sequences become visible in a buffer.  @strong{Warning:} @emph{Use this variable with extreme caution, because many files in the Emacs distribution use ISO-2022 encoding.}"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1285
#, no-wrap
msgid "charsets supported by a coding system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1286
#, no-wrap
msgid "coding-system-charset-list coding-system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1290
msgid "This function returns the list of character sets (@pxref{Character Sets}) supported by @var{coding-system}.  Some coding systems that support too many character sets to list them all yield special values:"
msgstr ""

#. type: itemize
#: nonascii.texi.orig:1294
msgid "If @var{coding-system} supports all Emacs characters, the value is @code{(emacs)}."
msgstr ""

#. type: itemize
#: nonascii.texi.orig:1297
msgid "If @var{coding-system} supports all Unicode characters, the value is @code{(unicode)}."
msgstr ""

#. type: itemize
#: nonascii.texi.orig:1300
msgid "If @var{coding-system} supports all ISO-2022 charsets, the value is @code{iso-2022}."
msgstr ""

#. type: itemize
#: nonascii.texi.orig:1304
msgid "If @var{coding-system} supports all the characters in the internal coding system used by Emacs version 21 (prior to the implementation of internal Unicode support), the value is @code{emacs-mule}."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1311
msgid "@xref{Coding systems for a subprocess,, Process Information}, in particular the description of the functions @code{process-coding-system} and @code{set-process-coding-system}, for how to examine or set the coding systems used for I/O to a subprocess."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1315
#, no-wrap
msgid "select safe coding system"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1316
#, no-wrap
msgid "select-safe-coding-system from to &optional default-coding-system accept-default-p file"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1322
msgid "This function selects a coding system for encoding specified text, asking the user to choose if necessary.  Normally the specified text is the text in the current buffer between @var{from} and @var{to}.  If @var{from} is a string, the string specifies the text to encode, and @var{to} is ignored."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1326
msgid "If the specified text includes raw bytes (@pxref{Text Representations}), @code{select-safe-coding-system} suggests @code{raw-text} for its encoding."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1338
msgid "If @var{default-coding-system} is non-@code{nil}, that is the first coding system to try; if that can handle the text, @code{select-safe-coding-system} returns that coding system.  It can also be a list of coding systems; then the function tries each of them one by one.  After trying all of them, it next tries the current buffer's value of @code{buffer-file-coding-system} (if it is not @code{undecided}), then the default value of @code{buffer-file-coding-system} and finally the user's most preferred coding system, which the user can set using the command @code{prefer-coding-system} (@pxref{Recognize Coding,, Recognizing Coding Systems, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1343
msgid "If one of those coding systems can safely encode all the specified text, @code{select-safe-coding-system} chooses it and returns it.  Otherwise, it asks the user to choose from a list of coding systems which can encode all the text, and returns the user's choice."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1349
msgid "@var{default-coding-system} can also be a list whose first element is t and whose other elements are coding systems.  Then, if no coding system in the list can handle the text, @code{select-safe-coding-system} queries the user immediately, without trying any of the three alternatives described above."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1358
msgid "The optional argument @var{accept-default-p}, if non-@code{nil}, should be a function to determine whether a coding system selected without user interaction is acceptable. @code{select-safe-coding-system} calls this function with one argument, the base coding system of the selected coding system.  If @var{accept-default-p} returns @code{nil}, @code{select-safe-coding-system} rejects the silently selected coding system, and asks the user to select a coding system from a list of possible candidates."
msgstr ""

#. type: vindex
#: nonascii.texi.orig:1359
#, no-wrap
msgid "select-safe-coding-system-accept-default-p"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1364
msgid "If the variable @code{select-safe-coding-system-accept-default-p} is non-@code{nil}, it should be a function taking a single argument.  It is used in place of @var{accept-default-p}, overriding any value supplied for this argument."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1376
msgid "As a final step, before returning the chosen coding system, @code{select-safe-coding-system} checks whether that coding system is consistent with what would be selected if the contents of the region were read from a file.  (If not, this could lead to data corruption in a file subsequently re-visited and edited.)  Normally, @code{select-safe-coding-system} uses @code{buffer-file-name} as the file for this purpose, but if @var{file} is non-@code{nil}, it uses that file instead (this can be relevant for @code{write-region} and similar functions).  If it detects an apparent inconsistency, @code{select-safe-coding-system} queries the user before selecting the coding system."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1380
msgid "Here are two functions you can use to let the user specify a coding system, with completion.  @xref{Completion}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1381
#, no-wrap
msgid "read-coding-system prompt &optional default"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1386
msgid "This function reads a coding system using the minibuffer, prompting with string @var{prompt}, and returns the coding system name as a symbol.  If the user enters null input, @var{default} specifies which coding system to return.  It should be a symbol or a string."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1388
#, no-wrap
msgid "read-non-nil-coding-system prompt"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1393
msgid "This function reads a coding system using the minibuffer, prompting with string @var{prompt}, and returns the coding system name as a symbol.  If the user tries to enter null input, it asks the user to try again.  @xref{Coding Systems}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1397
#, no-wrap
msgid "default coding system"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1398
#, no-wrap
msgid "coding system, automatically determined"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1403
msgid "This section describes variables that specify the default coding system for certain files or when running certain subprograms, and the function that I/O operations use to access them."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1410
msgid "The idea of these variables is that you set them once and for all to the defaults you want, and then do not change them again.  To specify a particular coding system for a particular operation in a Lisp program, don't change these variables; instead, override them using @code{coding-system-for-read} and @code{coding-system-for-write} (@pxref{Specifying Coding Systems})."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1411
#, no-wrap
msgid "file contents, and default coding system"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1412
#, no-wrap
msgid "auto-coding-regexp-alist"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1422
msgid "This variable is an alist of text patterns and corresponding coding systems. Each element has the form @code{(@var{regexp} . @var{coding-system})}; a file whose first few kilobytes match @var{regexp} is decoded with @var{coding-system} when its contents are read into a buffer.  The settings in this alist take priority over @code{coding:} tags in the files and the contents of @code{file-coding-system-alist} (see below).  The default value is set so that Emacs automatically recognizes mail files in Babyl format and reads them with no code conversions."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1424
#, no-wrap
msgid "file name, and default coding system"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1425
#, no-wrap
msgid "file-coding-system-alist"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1431
msgid "This variable is an alist that specifies the coding systems to use for reading and writing particular files.  Each element has the form @code{(@var{pattern} . @var{coding})}, where @var{pattern} is a regular expression that matches certain file names.  The element applies to file names that match @var{pattern}."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1439
msgid "The @sc{cdr} of the element, @var{coding}, should be either a coding system, a cons cell containing two coding systems, or a function name (a symbol with a function definition).  If @var{coding} is a coding system, that coding system is used for both reading the file and writing it.  If @var{coding} is a cons cell containing two coding systems, its @sc{car} specifies the coding system for decoding, and its @sc{cdr} specifies the coding system for encoding."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1445
msgid "If @var{coding} is a function name, the function should take one argument, a list of all arguments passed to @code{find-operation-coding-system}.  It must return a coding system or a cons cell containing two coding systems.  This value has the same meaning as described above."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1448
msgid "If @var{coding} (or what returned by the above function) is @code{undecided}, the normal code-detection is performed."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1450
#, no-wrap
msgid "auto-coding-alist"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1455
msgid "This variable is an alist that specifies the coding systems to use for reading and writing particular files.  Its form is like that of @code{file-coding-system-alist}, but, unlike the latter, this variable takes priority over any @code{coding:} tags in the file."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1457
#, no-wrap
msgid "program name, and default coding system"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1458
#, no-wrap
msgid "process-coding-system-alist"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1466
msgid "This variable is an alist specifying which coding systems to use for a subprocess, depending on which program is running in the subprocess.  It works like @code{file-coding-system-alist}, except that @var{pattern} is matched against the program name used to start the subprocess.  The coding system or systems specified in this alist are used to initialize the coding systems used for I/O to the subprocess, but you can specify other coding systems later using @code{set-process-coding-system}."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1475
msgid "@strong{Warning:} Coding systems such as @code{undecided}, which determine the coding system from the data, do not work entirely reliably with asynchronous subprocess output.  This is because Emacs handles asynchronous subprocess output in batches, as it arrives.  If the coding system leaves the character code conversion unspecified, or leaves the end-of-line conversion unspecified, Emacs must try to detect the proper conversion from one batch at a time, and this does not always work."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1480
msgid "Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion---that is, one like @code{latin-1-unix}, rather than @code{undecided} or @code{latin-1}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1481
#, no-wrap
msgid "port number, and default coding system"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1482
#, no-wrap
msgid "network service name, and default coding system"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1483
#, no-wrap
msgid "network-coding-system-alist"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1490
msgid "This variable is an alist that specifies the coding system to use for network streams.  It works much like @code{file-coding-system-alist}, with the difference that the @var{pattern} in an element may be either a port number or a regular expression.  If it is a regular expression, it is matched against the network service name used to open the network stream."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1492
#, no-wrap
msgid "default-process-coding-system"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1496
msgid "This variable specifies the coding systems to use for subprocess (and network stream) input and output, when nothing else specifies what to do."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1500
msgid "The value should be a cons cell of the form @code{(@var{input-coding} . @var{output-coding})}.  Here @var{input-coding} applies to input from the subprocess, and @var{output-coding} applies to output to it."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1502
#, no-wrap
msgid "default coding system, functions to determine"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1503
#, no-wrap
msgid "auto-coding-functions"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1506
msgid "This variable holds a list of functions that try to determine a coding system for a file based on its undecoded contents."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1514
msgid "Each function in this list should be written to look at text in the current buffer, but should not modify it in any way.  The buffer will contain undecoded text of parts of the file.  Each function should take one argument, @var{size}, which tells it how many characters to look at, starting from point.  If the function succeeds in determining a coding system for the file, it should return that coding system.  Otherwise, it should return @code{nil}."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1517
msgid "If a file has a @samp{coding:} tag, that takes precedence, so these functions won't be called."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1519
#, no-wrap
msgid "find-auto-coding filename size"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1535
msgid "This function tries to determine a suitable coding system for @var{filename}.  It examines the buffer visiting the named file, using the variables documented above in sequence, until it finds a match for one of the rules specified by these variables.  It then returns a cons cell of the form @code{(@var{coding} . @var{source})}, where @var{coding} is the coding system to use and @var{source} is a symbol, one of @code{auto-coding-alist}, @code{auto-coding-regexp-alist}, @code{:coding}, or @code{auto-coding-functions}, indicating which one supplied the matching rule.  The value @code{:coding} means the coding system was specified by the @code{coding:} tag in the file (@pxref{Specify Coding,, coding tag, emacs, The GNU Emacs Manual}).  The order of looking for a matching rule is @code{auto-coding-alist} first, then @code{auto-coding-regexp-alist}, then the @code{coding:} tag, and lastly @code{auto-coding-functions}.  If no matching rule was found, the function returns @code{nil}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1542
msgid "The second argument @var{size} is the size of text, in characters, following point.  The function examines text only within @var{size} characters after point.  Normally, the buffer should be positioned at the beginning when this function is called, because one of the places for the @code{coding:} tag is the first one or two lines of the file; in that case, @var{size} should be the size of the buffer."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1544
#, no-wrap
msgid "set-auto-coding filename size"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1550
msgid "This function returns a suitable coding system for file @var{filename}.  It uses @code{find-auto-coding} to find the coding system.  If no coding system could be determined, the function returns @code{nil}.  The meaning of the argument @var{size} is like in @code{find-auto-coding}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1552
#, no-wrap
msgid "find-operation-coding-system operation &rest arguments"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1556
msgid "This function returns the coding system to use (by default) for performing @var{operation} with @var{arguments}.  The value has this form:"
msgstr ""

#. type: example
#: nonascii.texi.orig:1559
#, no-wrap
msgid "(@var{decoding-system} . @var{encoding-system})\n"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1565
msgid "The first element, @var{decoding-system}, is the coding system to use for decoding (in case @var{operation} does decoding), and @var{encoding-system} is the coding system for encoding (in case @var{operation} does encoding)."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1571
msgid "The argument @var{operation} is a symbol; it should be one of @code{write-region}, @code{start-process}, @code{call-process}, @code{call-process-region}, @code{insert-file-contents}, or @code{open-network-stream}.  These are the names of the Emacs I/O primitives that can do character code and eol conversion."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1579
msgid "The remaining arguments should be the same arguments that might be given to the corresponding I/O primitive.  Depending on the primitive, one of those arguments is selected as the @dfn{target}.  For example, if @var{operation} does file I/O, whichever argument specifies the file name is the target.  For subprocess primitives, the process name is the target.  For @code{open-network-stream}, the target is the service name or port number."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1585
msgid "Depending on @var{operation}, this function looks up the target in @code{file-coding-system-alist}, @code{process-coding-system-alist}, or @code{network-coding-system-alist}.  If the target is found in the alist, @code{find-operation-coding-system} returns its association in the alist; otherwise it returns @code{nil}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1595
msgid "If @var{operation} is @code{insert-file-contents}, the argument corresponding to the target may be a cons cell of the form @code{(@var{filename} . @var{buffer})}.  In that case, @var{filename} is a file name to look up in @code{file-coding-system-alist}, and @var{buffer} is a buffer that contains the file's contents (not yet decoded).  If @code{file-coding-system-alist} specifies a function to call for this file, and that function needs to examine the file's contents (as it usually does), it should examine the contents of @var{buffer} instead of reading the file."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:1598
#, no-wrap
msgid "Specifying a Coding System for One Operation"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1599
#, no-wrap
msgid "specify coding system"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1600
#, no-wrap
msgid "force coding system for operation"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1601
#, no-wrap
msgid "coding system for operation"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1606
msgid "You can specify the coding system for a specific operation by binding the variables @code{coding-system-for-read} and/or @code{coding-system-for-write}."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1607
#, no-wrap
msgid "coding-system-for-read"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1610
msgid "If this variable is non-@code{nil}, it specifies the coding system to use for reading a file, or for input from a synchronous subprocess."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1616
msgid "It also applies to any asynchronous subprocess or network stream, but in a different way: the value of @code{coding-system-for-read} when you start the subprocess or open the network stream specifies the input decoding method for that subprocess or network stream.  It remains in use for that subprocess or network stream unless and until overridden."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1621
msgid "The right way to use this variable is to bind it with @code{let} for a specific I/O operation.  Its global value is normally @code{nil}, and you should not globally set it to any other value.  Here is an example of the right way to use the variable:"
msgstr ""

#. type: example
#: nonascii.texi.orig:1626
#, no-wrap
msgid ""
";; @r{Read the file with no character code conversion.}\n"
"(let ((coding-system-for-read 'no-conversion))\n"
"  (insert-file-contents filename))\n"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1633
msgid "When its value is non-@code{nil}, this variable takes precedence over all other methods of specifying a coding system to use for input, including @code{file-coding-system-alist}, @code{process-coding-system-alist} and @code{network-coding-system-alist}."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1635
#, no-wrap
msgid "coding-system-for-write"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1639
msgid "This works much like @code{coding-system-for-read}, except that it applies to output rather than input.  It affects writing to files, as well as sending output to subprocesses and net connections."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1644
msgid "When a single operation does both input and output, as do @code{call-process-region} and @code{start-process}, both @code{coding-system-for-read} and @code{coding-system-for-write} affect it."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1646
#, no-wrap
msgid "inhibit-eol-conversion"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1651
msgid "When this variable is non-@code{nil}, no end-of-line conversion is done, no matter which coding system is specified.  This applies to all the Emacs I/O and subprocess primitives, and to the explicit encoding and decoding functions (@pxref{Explicit Encoding})."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1653
#, no-wrap
msgid "priority order of coding systems"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1654
#, no-wrap
msgid "coding systems, priority"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1660
msgid "Sometimes, you need to prefer several coding systems for some operation, rather than fix a single one.  Emacs lets you specify a priority order for using coding systems.  This ordering affects the sorting of lists of coding systems returned by functions such as @code{find-coding-systems-region} (@pxref{Lisp and Coding Systems})."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1661
#, no-wrap
msgid "coding-system-priority-list &optional highestp"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1665
msgid "This function returns the list of coding systems in the order of their current priorities.  Optional argument @var{highestp}, if non-@code{nil}, means return only the highest priority coding system."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1667
#, no-wrap
msgid "set-coding-system-priority &rest coding-systems"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1671
msgid "This function puts @var{coding-systems} at the beginning of the priority list for coding systems, thus making their priority higher than all the rest."
msgstr ""

#. type: defmac
#: nonascii.texi.orig:1673
#, no-wrap
msgid "with-coding-priority coding-systems &rest body@dots{}"
msgstr ""

#. type: defmac
#: nonascii.texi.orig:1678
msgid "This macro execute @var{body}, like @code{progn} does (@pxref{Sequencing, progn}), with @var{coding-systems} at the front of the priority list for coding systems.  @var{coding-systems} should be a list of coding systems to prefer during execution of @var{body}."
msgstr ""

#. type: subsection
#: nonascii.texi.orig:1681
#, no-wrap
msgid "Explicit Encoding and Decoding"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1682
#, no-wrap
msgid "encoding in coding systems"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1683
#, no-wrap
msgid "decoding in coding systems"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1689
msgid "All the operations that transfer text in and out of Emacs have the ability to use a coding system to encode or decode the text.  You can also explicitly encode and decode text using the functions in this section."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1698
msgid "The result of encoding, and the input to decoding, are not ordinary text.  They logically consist of a series of byte values; that is, a series of @acronym{ASCII} and eight-bit characters.  In unibyte buffers and strings, these characters have codes in the range 0 through #xFF (255).  In a multibyte buffer or string, eight-bit characters have character codes higher than #xFF (@pxref{Text Representations}), but Emacs transparently converts them to their single-byte values when you encode or decode such text."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1705
msgid "The usual way to read a file into a buffer as a sequence of bytes, so you can decode the contents explicitly, is with @code{insert-file-contents-literally} (@pxref{Reading from Files}); alternatively, specify a non-@code{nil} @var{rawfile} argument when visiting a file with @code{find-file-noselect}.  These methods result in a unibyte buffer."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1711
msgid "The usual way to use the byte sequence that results from explicitly encoding text is to copy it to a file or process---for example, to write it with @code{write-region} (@pxref{Writing to Files}), and suppress encoding by binding @code{coding-system-for-write} to @code{no-conversion}."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1717
msgid "Here are the functions to perform explicit encoding or decoding.  The encoding functions produce sequences of bytes; the decoding functions are meant to operate on sequences of bytes.  All of these functions discard text properties.  They also set @code{last-coding-system-used} to the precise coding system they used."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1718
#, no-wrap
msgid "Command encode-coding-region start end coding-system &optional destination"
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1726
msgid "This command encodes the text from @var{start} to @var{end} according to coding system @var{coding-system}.  Normally, the encoded text replaces the original text in the buffer, but the optional argument @var{destination} can change that.  If @var{destination} is a buffer, the encoded text is inserted in that buffer after point (point does not move); if it is @code{t}, the command returns the encoded text as a unibyte string without inserting it."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1729
msgid "If encoded text is inserted in some buffer, this command returns the length of the encoded text."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1734
msgid "The result of encoding is logically a sequence of bytes, but the buffer remains multibyte if it was multibyte before, and any 8-bit bytes are converted to their multibyte representation (@pxref{Text Representations})."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1735
#, no-wrap
msgid "@code{undecided} coding-system, when encoding"
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1741
msgid "Do @emph{not} use @code{undecided} for @var{coding-system} when encoding text, since that may lead to unexpected results.  Instead, use @code{select-safe-coding-system} (@pxref{User-Chosen Coding Systems, select-safe-coding-system}) to suggest a suitable encoding, if there's no obvious pertinent value for @var{coding-system}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1743
#, no-wrap
msgid "encode-coding-string string coding-system &optional nocopy buffer"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1749
msgid "This function encodes the text in @var{string} according to coding system @var{coding-system}.  It returns a new string containing the encoded text, except when @var{nocopy} is non-@code{nil}, in which case the function may return @var{string} itself if the encoding operation is trivial.  The result of encoding is a unibyte string."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1751
#, no-wrap
msgid "Command decode-coding-region start end coding-system &optional destination"
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1763
msgid "This command decodes the text from @var{start} to @var{end} according to coding system @var{coding-system}.  To make explicit decoding useful, the text before decoding ought to be a sequence of byte values, but both multibyte and unibyte buffers are acceptable (in the multibyte case, the raw byte values should be represented as eight-bit characters).  Normally, the decoded text replaces the original text in the buffer, but the optional argument @var{destination} can change that.  If @var{destination} is a buffer, the decoded text is inserted in that buffer after point (point does not move); if it is @code{t}, the command returns the decoded text as a multibyte string without inserting it."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1766
msgid "If decoded text is inserted in some buffer, this command returns the length of the decoded text."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1770
msgid "This command puts a @code{charset} text property on the decoded text.  The value of the property states the character set used to decode the original text."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1772
#, no-wrap
msgid "decode-coding-string string coding-system &optional nocopy buffer"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1781
msgid "This function decodes the text in @var{string} according to @var{coding-system}.  It returns a new string containing the decoded text, except when @var{nocopy} is non-@code{nil}, in which case the function may return @var{string} itself if the decoding operation is trivial.  To make explicit decoding useful, the contents of @var{string} ought to be a unibyte string with a sequence of byte values, but a multibyte string is also acceptable (assuming it contains 8-bit bytes in their multibyte form)."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1785
msgid "If optional argument @var{buffer} specifies a buffer, the decoded text is inserted in that buffer after point (point does not move).  In this case, the return value is the length of the decoded text."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1786
#, no-wrap
msgid "@code{charset}, text property"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1790
msgid "This function puts a @code{charset} text property on the decoded text.  The value of the property states the character set used to decode the original text:"
msgstr ""

#. type: group
#: nonascii.texi.orig:1795
#, no-wrap
msgid ""
"(decode-coding-string \"Gr\\374ss Gott\" 'latin-1)\n"
"     @result{} #(\"Gr@\"uss Gott\" 0 9 (charset iso-8859-1))\n"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1799
#, no-wrap
msgid "decode-coding-inserted-region from to filename &optional visit beg end replace"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1803
msgid "This function decodes the text from @var{from} to @var{to} as if it were being read from file @var{filename} using @code{insert-file-contents} using the rest of the arguments provided."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1808
msgid "The normal way to use this function is after reading text from a file without decoding, if you decide you would rather have decoded it.  Instead of deleting the text and reading it again, this time with decoding, you can call this function."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1818
msgid "Emacs can use coding systems to decode keyboard input and encode terminal output.  This is useful for terminals that transmit or display text using a particular encoding, such as Latin-1.  Emacs does not set @code{last-coding-system-used} when encoding or decoding terminal I/O."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1819
#, no-wrap
msgid "keyboard-coding-system &optional terminal"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1824
msgid "This function returns the coding system used for decoding keyboard input from @var{terminal}.  A value of @code{no-conversion} means no decoding is done.  If @var{terminal} is omitted or @code{nil}, it means the selected frame's terminal.  @xref{Multiple Terminals}."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1826
#, no-wrap
msgid "Command set-keyboard-coding-system coding-system &optional terminal"
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1833
msgid "This command specifies @var{coding-system} as the coding system to use for decoding keyboard input from @var{terminal}.  If @var{coding-system} is @code{nil}, that means not to decode keyboard input.  If @var{terminal} is a frame, it means that frame's terminal; if it is @code{nil}, that means the currently selected frame's terminal.  @xref{Multiple Terminals}."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1835
#, no-wrap
msgid "terminal-coding-system &optional terminal"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1841
msgid "This function returns the coding system that is in use for encoding terminal output from @var{terminal}.  A value of @code{no-conversion} means no encoding is done.  If @var{terminal} is a frame, it means that frame's terminal; if it is @code{nil}, that means the currently selected frame's terminal."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1843
#, no-wrap
msgid "Command set-terminal-coding-system coding-system &optional terminal"
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1850
msgid "This command specifies @var{coding-system} as the coding system to use for encoding terminal output from @var{terminal}.  If @var{coding-system} is @code{nil}, that means not to encode terminal output.  If @var{terminal} is a frame, it means that frame's terminal; if it is @code{nil}, that means the currently selected frame's terminal."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1854
#, no-wrap
msgid "input methods"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1863
msgid "@dfn{Input methods} provide convenient ways of entering non-@acronym{ASCII} characters from the keyboard.  Unlike coding systems, which translate non-@acronym{ASCII} characters to and from encodings meant to be read by programs, input methods provide human-friendly commands.  (@xref{Input Methods,,, emacs, The GNU Emacs Manual}, for information on how users use input methods to enter text.)  How to define input methods is not yet documented in this manual, but here we describe how to use them."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1866
msgid "Each input method has a name, which is currently a string; in the future, symbols may also be usable as input method names."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1867
#, no-wrap
msgid "current-input-method"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1872
msgid "This variable holds the name of the input method now active in the current buffer.  (It automatically becomes local in each buffer when set in any fashion.)  It is @code{nil} if no input method is active in the buffer now."
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1874
#, no-wrap
msgid "default-input-method"
msgstr ""

#. type: defopt
#: nonascii.texi.orig:1878
msgid "This variable holds the default input method for commands that choose an input method.  Unlike @code{current-input-method}, this variable is normally global."
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1880
#, no-wrap
msgid "Command set-input-method input-method"
msgstr ""

#. type: deffn
#: nonascii.texi.orig:1885
msgid "This command activates input method @var{input-method} for the current buffer.  It also sets @code{default-input-method} to @var{input-method}.  If @var{input-method} is @code{nil}, this command deactivates any input method for the current buffer."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1887
#, no-wrap
msgid "read-input-method-name prompt &optional default inhibit-null"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1892
msgid "This function reads an input method name with the minibuffer, prompting with @var{prompt}.  If @var{default} is non-@code{nil}, that is returned by default, if the user enters empty input.  However, if @var{inhibit-null} is non-@code{nil}, empty input signals an error."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1894
msgid "The returned value is a string."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1896
#, no-wrap
msgid "input-method-alist"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1899
msgid "This variable defines all the supported input methods.  Each element defines one input method, and should have the form:"
msgstr ""

#. type: example
#: nonascii.texi.orig:1903
#, no-wrap
msgid ""
"(@var{input-method} @var{language-env} @var{activate-func}\n"
" @var{title} @var{description} @var{args}...)\n"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1909
msgid "Here @var{input-method} is the input method name, a string; @var{language-env} is another string, the name of the language environment this input method is recommended for.  (That serves only for documentation purposes.)"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1914
msgid "@var{activate-func} is a function to call to activate this method.  The @var{args}, if any, are passed as arguments to @var{activate-func}.  All told, the arguments to @var{activate-func} are @var{input-method} and the @var{args}."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1918
msgid "@var{title} is a string to display in the mode line while this method is active.  @var{description} is a string describing this method and what it is good for."
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1923
msgid "The fundamental interface to input methods is through the variable @code{input-method-function}.  @xref{Reading One Event}, and @ref{Invoking the Input Method}."
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1926
#, no-wrap
msgid "locale"
msgstr ""

#. type: Plain text
#: nonascii.texi.orig:1931
msgid "POSIX defines a concept of ``locales'' which control which language to use in language-related features.  These Emacs variables control how Emacs interacts with these features."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1932
#, no-wrap
msgid "locale-coding-system"
msgstr ""

#. type: cindex
#: nonascii.texi.orig:1933
#, no-wrap
msgid "keyboard input decoding on X"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1938
msgid "This variable specifies the coding system to use for decoding system error messages and---on X Window system only---keyboard input, for encoding the format argument to @code{format-time-string}, and for decoding the return value of @code{format-time-string}."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1940
#, no-wrap
msgid "system-messages-locale"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1946
msgid "This variable specifies the locale to use for generating system error messages.  Changing the locale can cause messages to come out in a different language or in a different orthography.  If the variable is @code{nil}, the locale is specified by environment variables in the usual POSIX fashion."
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1948
#, no-wrap
msgid "system-time-locale"
msgstr ""

#. type: defvar
#: nonascii.texi.orig:1953
msgid "This variable specifies the locale to use for formatting time values.  Changing the locale can cause messages to appear according to the conventions of a different language.  If the variable is @code{nil}, the locale is specified by environment variables in the usual POSIX fashion."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1955
#, no-wrap
msgid "locale-info item"
msgstr ""

#. type: defun
#: nonascii.texi.orig:1958
msgid "This function returns locale data @var{item} for the current POSIX locale, if available.  @var{item} should be one of these symbols:"
msgstr ""

#. type: item
#: nonascii.texi.orig:1960
#, no-wrap
msgid "codeset"
msgstr ""

#. type: table
#: nonascii.texi.orig:1962
msgid "Return the character set as a string (locale item @code{CODESET})."
msgstr ""

#. type: item
#: nonascii.texi.orig:1963
#, no-wrap
msgid "days"
msgstr ""

#. type: table
#: nonascii.texi.orig:1966
msgid "Return a 7-element vector of day names (locale items @code{DAY_1} through @code{DAY_7});"
msgstr ""

#. type: item
#: nonascii.texi.orig:1967
#, no-wrap
msgid "months"
msgstr ""

#. type: table
#: nonascii.texi.orig:1970
msgid "Return a 12-element vector of month names (locale items @code{MON_1} through @code{MON_12})."
msgstr ""

#. type: item
#: nonascii.texi.orig:1971
#, no-wrap
msgid "paper"
msgstr ""

#. type: table
#: nonascii.texi.orig:1975
msgid "Return a list @code{(@var{width} @var{height})} for the default paper size measured in millimeters (locale items @code{PAPER_WIDTH} and @code{PAPER_HEIGHT})."
msgstr ""

#. type: defun
#: nonascii.texi.orig:1982
msgid "If the system can't provide the requested information, or if @var{item} is not one of those symbols, the value is @code{nil}.  All strings in the return value are decoded using @code{locale-coding-system}.  @xref{Locales,,, libc, The GNU Libc Manual}, for more information about locales and locale items."
msgstr ""
